[{"E:\\Web\\KaizenGlobeClient-main\\src\\index.js":"1","E:\\Web\\KaizenGlobeClient-main\\src\\reportWebVitals.js":"2","E:\\Web\\KaizenGlobeClient-main\\src\\App.js":"3","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\UserProfile\\UserProfile.js":"4","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Login\\EmailVerify.js":"5","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\ResultOrPdf\\ResultOrPdf.js":"6","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\AssessmentById.js":"7","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\IntroductionPage\\IntroductionPage.js":"8","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Completed\\Completed.js":"9","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\ReportSection\\ReportSection.js":"10","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\CreateNewAssessment\\CreateNewAssessment.js":"11","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\CreateNewAssessment\\CreateAssessment.js":"12","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\HomePage.js":"13","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Login\\Login.js":"14","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminPage\\AdminPage.js":"15","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\AdminSeeUserResult.js":"16","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\UserDetails\\UserDetails.js":"17","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminProfile\\AdminProfile.js":"18","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\ResultPage\\ResultPage.js":"19","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\FinalResult\\FinalResult.js":"20","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\VarifyEmail\\VarifyEmail.js":"21","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\MyProfile\\MyProfile.js":"22","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\PrivateRoute\\PrivateRoute.js":"23","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Login\\firebaseConfig.js":"24","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\AssessmentQuestionSingle.js":"25","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\StopWatch.js":"26","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\ResultPage\\SingleResultPage.js":"27","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\SingleUserSelectedAnswer.js":"28","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\SingleUserResult.js":"29","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AllAssessments\\AllAssessments.js":"30","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\ClientNavSection\\ClientNavSection.js":"31","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\SingleQuestion\\SingleQuestion.js":"32","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\HeaderSlider\\HeaderSlider.js":"33","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\OurEdge\\OurEdge.js":"34","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\NavBarSection\\NavBarSection.js":"35","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\OurOfferings\\OurOfferings.js":"36","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminNavBar\\AdminNavBar.js":"37","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\HelperComponent\\PDFDownloader.js":"38","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\UserData\\UserData.js":"39","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\OneNumber\\OneNumber.js":"40","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\SingleResultPageUser.js":"41","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AllAssessments\\SingleAssessment.js":"42","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\OurOfferings\\SingleOffer.js":"43","E:\\Web\\KaizenGlobeClient-main\\src\\FakeData\\AllAssessments.js":"44","E:\\Web\\KaizenGlobeClient-main\\src\\FakeData\\AllServices.js":"45","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Dimensions\\Dimensions.js":"46","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Report\\Report.js":"47","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Introduction\\Introduction.js":"48","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Scores\\Scores.js":"49","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\ReportFromDataBase\\ReportFromDataBase.js":"50","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\TopHeader\\TopHeader.js":"51","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\BackGroundResearch\\BackGroundResearch.js":"52"},{"size":547,"mtime":1612504836000,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1612504836000,"results":"55","hashOfConfig":"54"},{"size":4350,"mtime":1612504836000,"results":"56","hashOfConfig":"54"},{"size":707,"mtime":1612504836000,"results":"57","hashOfConfig":"54"},{"size":1411,"mtime":1612504836000,"results":"58","hashOfConfig":"54"},{"size":554,"mtime":1612504836000,"results":"59","hashOfConfig":"54"},{"size":1099,"mtime":1612504836000,"results":"60","hashOfConfig":"54"},{"size":6274,"mtime":1612504836000,"results":"61","hashOfConfig":"54"},{"size":3297,"mtime":1612504836000,"results":"62","hashOfConfig":"54"},{"size":7425,"mtime":1612504836000,"results":"63","hashOfConfig":"54"},{"size":4923,"mtime":1612504836000,"results":"64","hashOfConfig":"54"},{"size":1138,"mtime":1612504836000,"results":"65","hashOfConfig":"54"},{"size":614,"mtime":1612504836000,"results":"66","hashOfConfig":"54"},{"size":10267,"mtime":1612504836000,"results":"67","hashOfConfig":"54"},{"size":2113,"mtime":1612504836000,"results":"68","hashOfConfig":"54"},{"size":587,"mtime":1612504836000,"results":"69","hashOfConfig":"54"},{"size":9271,"mtime":1612504836000,"results":"70","hashOfConfig":"54"},{"size":19994,"mtime":1612504836000,"results":"71","hashOfConfig":"54"},{"size":1357,"mtime":1612504836000,"results":"72","hashOfConfig":"54"},{"size":1585,"mtime":1612504836000,"results":"73","hashOfConfig":"54"},{"size":2564,"mtime":1612504836000,"results":"74","hashOfConfig":"54"},{"size":27767,"mtime":1612504836000,"results":"75","hashOfConfig":"54"},{"size":593,"mtime":1612504836000,"results":"76","hashOfConfig":"54"},{"size":336,"mtime":1612504836000,"results":"77","hashOfConfig":"54"},{"size":7922,"mtime":1612504836000,"results":"78","hashOfConfig":"54"},{"size":934,"mtime":1612504836000,"results":"79","hashOfConfig":"54"},{"size":5879,"mtime":1612504836000,"results":"80","hashOfConfig":"54"},{"size":1288,"mtime":1612504836000,"results":"81","hashOfConfig":"54"},{"size":9797,"mtime":1612504836000,"results":"82","hashOfConfig":"54"},{"size":2753,"mtime":1612504836000,"results":"83","hashOfConfig":"54"},{"size":2141,"mtime":1612504836000,"results":"84","hashOfConfig":"54"},{"size":4116,"mtime":1612504836000,"results":"85","hashOfConfig":"54"},{"size":2100,"mtime":1612504836000,"results":"86","hashOfConfig":"54"},{"size":684,"mtime":1612504836000,"results":"87","hashOfConfig":"54"},{"size":2503,"mtime":1612504836000,"results":"88","hashOfConfig":"54"},{"size":810,"mtime":1612504836000,"results":"89","hashOfConfig":"54"},{"size":2256,"mtime":1612504836000,"results":"90","hashOfConfig":"54"},{"size":416,"mtime":1612504836000,"results":"91","hashOfConfig":"54"},{"size":4416,"mtime":1612504836000,"results":"92","hashOfConfig":"54"},{"size":2240,"mtime":1612504836000,"results":"93","hashOfConfig":"54"},{"size":6677,"mtime":1612504836000,"results":"94","hashOfConfig":"54"},{"size":2670,"mtime":1612504836000,"results":"95","hashOfConfig":"54"},{"size":879,"mtime":1612504836000,"results":"96","hashOfConfig":"54"},{"size":411,"mtime":1612504836000,"results":"97","hashOfConfig":"54"},{"size":1012,"mtime":1612504836000,"results":"98","hashOfConfig":"54"},{"size":4069,"mtime":1612504836000,"results":"99","hashOfConfig":"54"},{"size":2035,"mtime":1612874250867,"results":"100","hashOfConfig":"54"},{"size":4153,"mtime":1612873680783,"results":"101","hashOfConfig":"54"},{"size":10461,"mtime":1612874624430,"results":"102","hashOfConfig":"54"},{"size":8871,"mtime":1612874728067,"results":"103","hashOfConfig":"54"},{"size":1046,"mtime":1612504836000,"results":"104","hashOfConfig":"54"},{"size":6479,"mtime":1612873832663,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"19xc5g0",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"108"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"108"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"108"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"108"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"E:\\Web\\KaizenGlobeClient-main\\src\\index.js",[],["248","249"],"E:\\Web\\KaizenGlobeClient-main\\src\\reportWebVitals.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\App.js",["250","251","252","253","254","255","256","257","258","259"],"import \"./App.css\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport HomePage from \"./Components/Home/HomePage/HomePage\";\nimport Login, { emailLinkComplete } from \"./Components/Login/Login\";\nimport UserProfile from \"./Components/Client/UserProfile/UserProfile\";\nimport AssessmentById from \"./Components/Client/AssessmentById/AssessmentById\";\nimport IntroductionPage from \"./Components/Client/IntroductionPage/IntroductionPage\";\nimport MyProfile from \"./Components/Client/MyProfile/MyProfile\";\nimport ReportSection from \"./Components/Client/ReportSection/ReportSection\";\nimport Completed from \"./Components/Client/Completed/Completed\";\nimport AdminPage from \"./Components/Client/Admin/AdminPage/AdminPage\";\nimport CreateNewAssessment from \"./Components/Client/CreateNewAssessment/CreateNewAssessment\";\nimport CreateAssessment from \"./Components/Client/CreateNewAssessment/CreateAssessment\";\nimport AdminProfile from \"./Components/Client/Admin/AdminProfile/AdminProfile\";\nimport ResultPage from \"./Components/ResultPage/ResultPage\";\nimport FinalResult from \"./Components/FinalResult/FinalResult\";\nimport ResultOrPdf from \"./Components/ResultOrPdf/ResultOrPdf\";\nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\nimport AdminSeeUserResult from \"./Components/Client/Admin/AdminSeeUserResult/AdminSeeUserResult\";\nimport VarifyEmail from \"./Components/Client/VarifyEmail/VarifyEmail\";\nimport EmailVerify from \"./Components/Login/EmailVerify\";\nimport UserDetails from \"./Components/Client/Admin/UserDetails/UserDetails\";\nexport const UserContext = createContext();\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({\n    name: \"\",\n    email: \"\",\n    photo: \"\",\n    totalScore: 0,\n    selectedAnswerArray: [],\n  });\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/userDetails`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setLoggedInUser(data[0]);\n        }\n      });\n  }, []);\n\n  return (\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login></Login>\n          </Route>\n\n          <Route path=\"/login\">\n            <Login></Login>\n          </Route>\n\n          <PrivateRoute path=\"/verifyEmail\">\n            <EmailVerify></EmailVerify>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/profile\">\n            <UserProfile></UserProfile>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/myProfile\">\n            <MyProfile></MyProfile>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/assessment/:id\">\n            <IntroductionPage></IntroductionPage>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/assessmentQuestion/:id\">\n            <AssessmentById />\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/userReport/:id\">\n            {/* <ReportSection></ReportSection> */}\n            <FinalResult></FinalResult>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/completeAssessment\">\n            <Completed></Completed>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/resultOrPdf/:id\">\n            <ResultOrPdf></ResultOrPdf>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/admin\">\n            <AdminPage></AdminPage>\n          </PrivateRoute>\n\n          <Route path=\"/userDetails/:id\">\n            <UserDetails></UserDetails>\n          </Route>\n\n          <PrivateRoute path=\"/adminProfile\">\n            <AdminProfile></AdminProfile>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/createNew\">\n            <CreateAssessment></CreateAssessment>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/result\">\n            <FinalResult></FinalResult>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/report/:id\">\n            <AdminSeeUserResult></AdminSeeUserResult>\n          </PrivateRoute>\n\n          <Route path=\"*\">\n            <p>page not found</p>\n          </Route>\n        </Switch>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\UserProfile\\UserProfile.js",["260","261","262","263","264","265"],"import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport AllAssessments from \"../AllAssessments/AllAssessments\";\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\nimport \"./UserProfile.css\";\nconst UserProfile = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  let history = useHistory();\n  let location = useLocation();\n\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <div className=\"container\">\n        <AllAssessments></AllAssessments>\n      </div>\n    </>\n  );\n};\n\nexport default UserProfile;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Login\\EmailVerify.js",["266","267","268","269"],"import React, { useContext } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport ClientNavSection from \"../Client/ClientNavSection/ClientNavSection\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nconst EmailVerify = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const history = useHistory();\n  let location = useLocation();\n\n  const handleVarify = () => {\n    console.log(\"click\");\n    const email = loggedInUser.email;\n    console.log(email);\n\n    const actionCodeSettings = {\n      url: \"http://localhost:3000/myProfile\",\n      handleCodeInApp: true,\n    };\n\n    firebase\n      .auth()\n      .sendSignInLinkToEmail(email, actionCodeSettings)\n      .then(() => {\n        window.localStorage.setItem(\"emailForSignIn\", email);\n        alert(\"Please check your email\");\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n      });\n  };\n\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <div onClick={handleVarify} className=\"google\">\n        please verify your email\n      </div>\n    </>\n  );\n};\n\nexport default EmailVerify;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\ResultOrPdf\\ResultOrPdf.js",["270"],"import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ClientNavSection from \"../Client/ClientNavSection/ClientNavSection\";\nimport pdf from \"../../../src/Image/one.pdf\";\n\nconst ResultOrPdf = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      <ClientNavSection></ClientNavSection>\n      <div className=\"container text-center mt-5\">\n        <Link to={`/userReport/${id}`}>\n          <button className=\"letsGoBtn\">Show Result</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultOrPdf;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\AssessmentById.js",["271","272","273","274"],"import React, { useContext } from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\n\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\nimport AssessmentQuestionSingle from \"./AssessmentQuestionSingle\";\n\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport StopWatch from \"./StopWatch\";\nimport picture from \"../../../Image/ability .jpg\";\n\nconst AssessmentById = () => {\n  /*timer function */\n\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <div className=\"container p-md-5 p-0\">\n        <div className=\"row mt-2 mb-2 d-flex justify-content-md-between align-items-center\">\n          <div style={{ textAlign: \"left\" }} className=\"col-md-4 mt-2 col-8\">\n            <img className=\"w-50 image-fluid\" src={picture} alt=\"\" />\n          </div>\n          <div className=\"col-md-2 col-2\">\n            <StopWatch></StopWatch>\n          </div>\n        </div>\n        <AssessmentQuestionSingle></AssessmentQuestionSingle>\n      </div>\n      {/* <SingleQuestion></SingleQuestion> */}\n    </>\n  );\n};\n\nexport default AssessmentById;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\IntroductionPage\\IntroductionPage.js",["275","276","277","278","279","280","281","282"],"import React, { useContext, useEffect, useState } from \"react\";\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\n\nimport img from \"../../../Image/Picture1.png\";\nimport {\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport \"./IntroductionPage.css\";\nimport { UserContext } from \"../../../App\";\n\nconst IntroductionPage = (props) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const { id } = useParams();\n\n  let history = useHistory();\n  let location = useLocation();\n\n  const [allAnswer, setAllAnswer] = useState([]);\n  const [match, setMatch] = useState(false);\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const name = data.map((answer) => answer.header === id);\n        for (let i = 0; i < name.length; i++) {\n          const element = name[i];\n          if (element === true) {\n            setMatch(true);\n          }\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <div className=\"container\">\n        <div style={{ paddingLeft: \"2px\" }}>\n          <section className=\"pl-md-2 pr-md-2 ml-1 p-0\">\n            <div className=\"container\" style={{ textAlign: \"justify\" }}>\n              <h3 style={{ color: \"#800000\" }} className=\"\">\n                Greetings from Centre of Strategic Mindset!\n              </h3>\n              <p className=\"text-justify\">\n                Welcome to Empathy Index. We live in an interdependent world.\n                Our thought process and actions impact others, and their conduct\n                impacts us, favourably or adversely. If there is one thing that\n                makes this interdependence work at its peak effectiveness, it is\n                empathy. Empathy is core to ‘Problem Discovery’ and is a\n                critical imperative to be considered even before contemplating\n                any resolution. It takes knowledge, understanding, personal\n                experiences, a compassionate mindset and most importantly a\n                rigorous discipline to be empathetic.\n              </p>\n              <p className=\"mt-2\">\n                How do we balance our personal needs with others’ requirements,\n                forms the basis of <b>EMPATHY EQUATION</b> between two\n                stakeholders or among multiple ones. It is an oscillating or\n                shifting balance. As long as we are able to appreciate this\n                reality, and are willing to make adjustments, we can succeed in\n                keeping this balance intact, and empathy equation in an\n                equilibrium. The key here is our ability to empathize with\n                stakeholders and situations, and its resultant dynamics. This\n                will create a new understanding that can help us alter our\n                approach to bring positive outcomes.\n              </p>\n\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Empathy Index (EI)</span>{\" \"}\n                is designed to help us evaluate, how we are doing on Empathy. Do\n                we have a deeper understanding of empathy? Have we fully\n                explored the true power of what empathy can do? And can we\n                develop empathy in a structured manner? EI is based on five core\n                dimensions as under:-\n                <br />\n                <div className=\"mt-md-2\" style={{ textAlign: \"left\" }}>\n                  <ol>\n                    <li>\n                      <span style={{ fontWeight: \"bold\" }}>\n                        Ability to Relate\n                      </span>\n                      -Where someone is coming from\n                    </li>\n                    <li>\n                      <span style={{ fontWeight: \"bold\" }}>\n                        Ability to Resonate\n                      </span>\n                      -Finding Common Ground\n                    </li>\n                    <li>\n                      <span style={{ fontWeight: \"bold\" }}>\n                        Ability to Reframe\n                      </span>\n                      -Own Understanding\n                    </li>\n                    <li>\n                      <span style={{ fontWeight: \"bold\" }}>\n                        Ability to Reorient\n                      </span>\n                      -Approach/Stance/Position\n                    </li>\n                    <li>\n                      <span style={{ fontWeight: \"bold\" }}>\n                        Ability to Reimagine\n                      </span>\n                      -A Positive and Aspirational End Outcome\n                    </li>\n                  </ol>\n                </div>\n              </p>\n\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  Each dimension has eight survey statements that need to be\n                  responded by recording your natural preference. Put your\n                  response in the corresponding boxes, based on your top of the\n                  mind recall and experiences. The survey statements are\n                  behavioural in nature and show your orientation and\n                  preference. There are no right and wrong answers. In nutshell,\n                  the idea is to gain an understanding as to what attitudinal\n                  and behavioural shifts need to manifest, to enhance our\n                  Empathy Index for greater relevance as well as significance.\n                </div>\n              </div>\n            </div>\n          </section>\n          <div className=\"text-center m-5\">\n            {match ? (\n              <Link to={`/userReport/${id}`}>\n                <button className=\"letsGoBtn\">See result</button>\n              </Link>\n            ) : (\n              <Link to={`/assessmentQuestion/${id}`}>\n                <button className=\"letsGoBtn\">Let's Go</button>\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IntroductionPage;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Completed\\Completed.js",["283","284","285","286","287","288"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\nimport \"./Completed.css\";\nimport pdf from \"../../../Image/one.pdf\";\n\nconst Completed = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [allAnswer, setAllAnswer] = useState([]);\n  const [style, setStyle] = useState({\n    display: \"none\",\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAllAnswer(data);\n        if (data.length === 0) {\n          alert(\"you have not yet taken the assessment\");\n          setStyle({\n            display: \"block\",\n          });\n          history.push(\"/profile\");\n        }\n      });\n  }, []);\n\n  const allHeader = [];\n  const allKyes = allAnswer.map((question) => {\n    allHeader.push(question.header);\n  });\n\n  const useFilter = (arr) => {\n    return arr.filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    });\n  };\n\n  const unique = useFilter(allHeader);\n\n  const allUniqueAnswer = [];\n\n  for (let i = 0; i < unique.length; i++) {\n    const element = unique[i];\n    const uniqueAnswer = allAnswer.find((answer) => {\n      return answer.header === element;\n    });\n\n    allUniqueAnswer.push(uniqueAnswer);\n  }\n\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <div className=\"\">\n        <div className=\"container pl-md-5 pr-md-5\">\n          <div>\n            <h3 style={{ color: \"#800000\" }} className=\"my-3\">\n              Your all complete assessment\n            </h3>\n          </div>\n          <div className=\"mb-2\">\n            {allAnswer.length > 0 ? (\n              <div className=\"row \">\n                {allUniqueAnswer.map((answer) => (\n                  <AllCompleteAssessment\n                    answer={answer}\n                    key={answer._id}\n                  ></AllCompleteAssessment>\n                ))}\n              </div>\n            ) : (\n              <div style={style} className=\"row\">\n                <p className=\"pl-md-3 pr-md-3\">\n                  you have not yet taken the assessment\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst AllCompleteAssessment = ({ answer }) => {\n  return (\n    <div className=\"col-md-12 mb-4\">\n      <div className=\"completeAssessmentCard p-1\">\n        <div className=\"row d-flex align-items-center\">\n          <div className=\"col-md-4 text-center pt-3\">\n            <p>{answer.header} </p>\n          </div>\n          <div className=\"col-md-4 pt-3 text-center\">\n            <p>{answer.date} </p>\n          </div>\n          <div className=\"col-md-4 text-center downloadPdf\">\n            <Link to={`/userReport/${answer.header}`}>\n              <button className=\"btn btn-rounded\">See result</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Completed;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\ReportSection\\ReportSection.js",["289","290","291"],"import React from \"react\";\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\nimport Picture1 from \"../../../Image/Picture1.png\";\nimport \"./ReportSection.css\";\nimport { Link } from \"react-router-dom\";\nimport pdf from \"../../../Image/one.pdf\";\n\nconst ReportSection = () => {\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <section>\n        <div className=\"container \">\n          <h3 className=\"text-bold my-4\">Dimension Wise Interpretation</h3>\n\n          <div className=\"row text-center text-uppercase text-bold\">\n            <div className=\"col-md-3  border border-dark bg-light p-2\">\n              Empathy Dimensions\n            </div>\n            <div\n              className=\"col  border border-dark text-light\"\n              style={{ backgroundColor: \"#800000\" }}\n            >\n              Not <br /> Demonstrated\n            </div>\n            <div\n              className=\"col border border-dark text-light\"\n              style={{ backgroundColor: \"#800000\" }}\n            >\n              Early <br /> Awareness\n            </div>\n            <div\n              className=\"col border border-dark text-light \"\n              style={{ backgroundColor: \"#800000\" }}\n            >\n              Selective <br /> application\n            </div>\n            <div\n              className=\"col border border-dark text-light\"\n              style={{ backgroundColor: \"#800000\" }}\n            >\n              Well <br /> Manifested\n            </div>\n            <div\n              className=\"col  border border-dark text-light\"\n              style={{ backgroundColor: \"#800000\" }}\n            >\n              Clear <br /> strength\n            </div>\n          </div>\n          <div className=\"row border border-dark\">\n            <div style={{ height: \"20px\" }}></div>\n          </div>\n          <div className=\"row border border-dark\">\n            <div className=\"col-md-3 border border-dark\">\n              <span className=\"text-uppercase text-bold\">Relatability</span>\n            </div>\n            <div className=\"col-md-9 p-0 m-0 \">\n              <div\n                className=\" progress-bar \"\n                role=\"progressbar\"\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundColor: \"#00B0F0\",\n                }}\n                aria-valuenow=\"50\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n          </div>\n\n          <div className=\"row border border-dark\">\n            <div style={{ height: \"20px\" }}></div>\n          </div>\n          <div className=\"row border border-dark\">\n            <div className=\"col-md-3 border border-dark\">\n              <span className=\"text-uppercase text-bold\">Resonance</span>\n            </div>\n            <div className=\"col-md-9 p-0 m-0 \">\n              <div\n                className=\" progress-bar \"\n                role=\"progressbar\"\n                style={{\n                  width: \"75%\",\n                  height: \"100%\",\n                  backgroundColor: \"#92D050\",\n                }}\n                aria-valuenow=\"50\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n          </div>\n\n          <div className=\"row border border-dark\">\n            <div style={{ height: \"20px\" }}></div>\n          </div>\n          <div className=\"row border border-dark\">\n            <div className=\"col-md-3 border border-dark\">\n              <span className=\"text-uppercase text-bold\">Reframing</span>\n            </div>\n            <div className=\"col-md-9 p-0 m-0 \">\n              <div\n                className=\" progress-bar \"\n                role=\"progressbar\"\n                style={{\n                  width: \"50%\",\n                  height: \"100%\",\n                  backgroundColor: \"#FFC000\",\n                }}\n                aria-valuenow=\"50\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n          </div>\n\n          <div className=\"row border border-dark\">\n            <div style={{ height: \"20px\" }}></div>\n          </div>\n          <div className=\"row border border-dark\">\n            <div className=\"col-md-3 border border-dark\">\n              <span className=\"text-uppercase text-bold\">Reorient</span>\n            </div>\n            <div className=\"col-md-9 p-0 m-0 \">\n              <div\n                className=\" progress-bar \"\n                role=\"progressbar\"\n                style={{\n                  width: \"25%\",\n                  height: \"100%\",\n                  backgroundColor: \"#ED7D31\",\n                }}\n                aria-valuenow=\"50\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n          </div>\n\n          <div className=\"row border border-dark\">\n            <div style={{ height: \"20px\" }}></div>\n          </div>\n          <div className=\"row border border-dark\">\n            <div className=\"col-md-3 border border-dark\">\n              <span className=\"text-uppercase text-bold\">Reimagination</span>\n            </div>\n            <div className=\"col-md-9 p-0 m-0 \">\n              <div\n                className=\" progress-bar \"\n                role=\"progressbar\"\n                style={{\n                  width: \"10%\",\n                  height: \"100%\",\n                  backgroundColor: \"#FF0000\",\n                }}\n                aria-valuenow=\"50\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div\n              className=\"col border border-dark\"\n              style={{ height: \"20px\", backgroundColor: \"#FF0000\" }}\n            ></div>\n            <div\n              className=\"col border border-dark\"\n              style={{ height: \"20px\", backgroundColor: \"#ED7D31\" }}\n            ></div>\n            <div\n              className=\"col border border-dark\"\n              style={{ height: \"20px\", backgroundColor: \"#FFC000\" }}\n            ></div>\n            <div\n              className=\"col border border-dark\"\n              style={{ height: \"20px\", backgroundColor: \"#92D050\" }}\n            ></div>\n            <div\n              className=\"col border border-dark\"\n              style={{ height: \"20px\", backgroundColor: \"#00B0F0\" }}\n            ></div>\n          </div>\n          <div className=\"row \">\n            <div className=\"col  border border-dark text-center text-bold\">\n              Not <br /> Demonstrated\n            </div>\n            <div className=\"col border border-dark text-center text-bold\">\n              Early <br /> Awareness\n            </div>\n            <div className=\"col border border-dark text-center text-bold \">\n              Selective <br /> application\n            </div>\n            <div className=\"col border border-dark text-center text-bold\">\n              Well <br /> Manifested\n            </div>\n            <div className=\"col  border border-dark text-center text-bold\">\n              Clear <br /> strength\n            </div>\n          </div>\n        </div>\n        {/* <footer className=\"mt-5 px-5\">\n          © {new Date().getFullYear()} Centre of Strategic Mindset, All Rights\n          Reserved\n        </footer> */}\n      </section>\n    </>\n  );\n};\n\nexport default ReportSection;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\CreateNewAssessment\\CreateNewAssessment.js",["292","293"],"import React from \"react\";\nimport { useState } from \"react\";\nimport AdminNavBar from \"../Admin/AdminNavBar/AdminNavBar\";\nimport \"./CreateNewAssessment.css\";\n\nconst CreateNewAssessment = ({\n  handlePush,\n  handleSubmit,\n  setQuestionHeader,\n}) => {\n  const [question, setQuestion] = useState({});\n  const [mapNumber, setMapNumber] = useState([1]);\n  const [count, setCount] = useState(1);\n  const [singleQuestion, setSingleQuestion] = useState({});\n  const [finalQuestion, setFinalQuestion] = useState({ ...question });\n  const [done, setDone] = useState(0);\n\n  /*------------------------------------------------------one two both handler */\n  const handleFirst = () => {\n    const newCount = count + 1;\n    setCount(newCount);\n    const newMapNumber = [...mapNumber, newCount];\n    setMapNumber(newMapNumber);\n  };\n  const newFinalQuestion = {\n    ...finalQuestion,\n    ...singleQuestion,\n    ...question,\n  };\n\n  const handleSeconde = () => {\n    handlePush(newFinalQuestion);\n  };\n\n  const handleBoth = () => {\n    handleFirst();\n    handleSeconde();\n  };\n\n  /*------------------------------------------------------------------handle question input */\n  const handleQuestion = (e) => {\n    const newQuestion = { ...question };\n    newQuestion[e.target.name] = e.target.value;\n    setQuestion(newQuestion);\n  };\n\n  /*------------------------------question header */\n  setQuestionHeader(question.header);\n  /*set done */\n  const handleDone = () => {\n    setDone(1);\n    handlePush(newFinalQuestion);\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"new m-4\">\n          {/* first row */}\n\n          <label style={{ color: \"black\" }} for=\"\">\n            Header\n          </label>\n          <input\n            onChange={handleQuestion}\n            type=\"text\"\n            class=\"form-control mb-2\"\n            name=\"header\"\n            placeholder=\"Your assessment header\"\n            required\n          ></input>\n\n          <label style={{ color: \"black\" }} for=\"\">\n            Measuring Index\n          </label>\n          <input\n            onChange={handleQuestion}\n            type=\"text\"\n            class=\"form-control mb-2\"\n            name=\"measuringIndex\"\n            placeholder=\"Measuring index \"\n            required\n          ></input>\n\n          <label style={{ color: \"black\" }} for=\"\">\n            Description\n          </label>\n          <input\n            onChange={handleQuestion}\n            type=\"text\"\n            class=\"form-control mb-2\"\n            name=\"description\"\n            placeholder=\"Description\"\n            required\n          ></input>\n\n          <label style={{ color: \"black\" }} for=\"\">\n            Total Time\n          </label>\n          <input\n            onChange={handleQuestion}\n            type=\"text\"\n            class=\"form-control mb-2\"\n            name=\"totalTime\"\n            placeholder=\"Total time\"\n            required\n          ></input>\n          {mapNumber.map((number) => (\n            <Single\n              singleQuestion={singleQuestion}\n              setSingleQuestion={setSingleQuestion}\n              number={number}\n              count={count}\n              handleQuestion={handleQuestion}\n            ></Single>\n          ))}\n          <div>\n            <button className=\"addMoreButton\" onClick={handleBoth}>\n              Add More\n            </button>\n            {/* <button onClick={handleConsole}>show array</button> */}\n          </div>\n\n          {done === 0 ? (\n            <button onClick={handleDone} className=\"btn btn-dan mt-2\">\n              Done\n            </button>\n          ) : (\n            <button onClick={handleSubmit} className=\"btn btn-success mt-2\">\n              Submit\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/*---------------------------------------------------------------------------------single question part */\nconst Single = ({ count, number, singleQuestion, setSingleQuestion }) => {\n  const stringNumber = number.toString();\n\n  const handleQuestion = (e) => {\n    const newQuestion = { ...singleQuestion, questionId: stringNumber };\n    newQuestion[e.target.name] = e.target.value;\n    setSingleQuestion(newQuestion);\n  };\n\n  return (\n    <div>\n      <label style={{ color: \"black\" }} for=\"\">\n        Question Serial Number\n      </label>\n      <input\n        onChange={handleQuestion}\n        type=\"text\"\n        class=\"form-control mb-2\"\n        name=\"questionId\"\n        placeholder=\"Question Serial Number - (1/2/3)\"\n        required\n        defaultValue={stringNumber}\n      ></input>\n\n      <label style={{ color: \"black\" }} for=\"\">\n        Your Question ( you need to use ? must )\n      </label>\n      <input\n        onChange={handleQuestion}\n        type=\"text\"\n        class=\"form-control mb-2\"\n        name=\"question\"\n        placeholder=\"Question\"\n        required\n      ></input>\n    </div>\n  );\n};\n\nexport default CreateNewAssessment;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\CreateNewAssessment\\CreateAssessment.js",["294"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport AdminNavBar from \"../Admin/AdminNavBar/AdminNavBar\";\nimport CreateNewAssessment from \"./CreateNewAssessment\";\n\nconst CreateAssessment = () => {\n  const allQuestions = [];\n\n  const [questionHeader, setQuestionHeader] = useState(\"\");\n\n  const question = {\n    header: questionHeader,\n    questions: allQuestions,\n  };\n\n  const handleSubmit = () => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/setQuestion`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify(question),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(\"you question added\");\n      });\n    console.log(question);\n  };\n\n  const handlePush = (question) => {\n    allQuestions.push(question);\n    console.log(\"add\");\n  };\n\n  return (\n    <div>\n      <AdminNavBar></AdminNavBar>\n      <CreateNewAssessment\n        handleSubmit={handleSubmit}\n        handlePush={handlePush}\n        setQuestionHeader={setQuestionHeader}\n      ></CreateNewAssessment>\n    </div>\n  );\n};\n\nexport default CreateAssessment;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\HomePage.js",["295","296"],"import React, { useContext } from \"react\";\nimport { UserContext } from \"../../../App\";\nimport NavBarSection from \"../NavBarSection/NavBarSection\";\nimport HeaderSlider from \"./HeaderSlider/HeaderSlider\";\nimport OurEdge from \"./OurEdge/OurEdge\";\nimport OurOfferings from \"./OurOfferings/OurOfferings\";\n\nconst HomePage = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  return (\n    <div>\n      <NavBarSection></NavBarSection>\n      <HeaderSlider></HeaderSlider>\n      <OurOfferings></OurOfferings>\n      <OurEdge></OurEdge>\n      <p>home</p>\n    </div>\n  );\n};\n\nexport default HomePage;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Login\\Login.js",["297","298","299","300","301"],"import React, { useContext, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport NavBarSection from \"../Home/NavBarSection/NavBarSection\";\nimport img from \"../../Image/logo.png\";\nimport bg from \"../../Image/bg2.jpg\";\nimport \"./Login.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nconst style = {\n  backgroundImage: `url(\"${bg}\")`,\n  backgroundPosition: \"center\",\n  backgroundSize: \"cover\",\n  backgroundRepeat: \"no-repeat\",\n  minHeight: \"100%\",\n  width: \"100%\",\n  position: \"fixed\",\n  overflow: \"auto\",\n  height: \"100%\",\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst Login = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const [newUser, setNewUser] = useState(false);\n\n  const history = useHistory();\n  let location = useLocation();\n\n  const handleSubmit = () => {\n    const email = loggedInUser.email;\n    const password = loggedInUser.password;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        // Signed in\n        // ...\n        const newUser = { ...loggedInUser };\n        newUser.email = user.user.email;\n        setLoggedInUser(newUser);\n\n        if (user.user.email === \"admin@gmail.com\") {\n          history.push(\"/admin\");\n        } else {\n          history.push(\"/profile\");\n        }\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(\"Reset password or create new account\");\n        console.log(error);\n      });\n  };\n\n  const handleChange = (e) => {\n    const newUser = { ...loggedInUser };\n    newUser[e.target.name] = e.target.value;\n    setLoggedInUser(newUser);\n  };\n\n  const handleSignUp = () => {\n    const email = loggedInUser.email;\n    const password = loggedInUser.password;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        // Signed in\n        const newUser = { ...loggedInUser };\n        newUser.email = user.user.email;\n        setLoggedInUser(newUser);\n        if (user.user.email === \"admin@gmail.com\") {\n          history.push(\"/admin\");\n        } else {\n          history.push(\"/profile\");\n        }\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n        // ..\n      });\n  };\n\n  /*\n  const handleSignUp = () => {\n    console.log(\"click\");\n\n    const email = loggedInUser.email;\n    console.log(email);\n\n    const actionCodeSettings = {\n      // url: \"http://localhost:3000/\",\n      url: \"https://online-assessment-ltd.netlify.app/\",\n      handleCodeInApp: true,\n    };\n\n    firebase\n      .auth()\n      .sendSignInLinkToEmail(email, actionCodeSettings)\n      .then(() => {\n        window.localStorage.setItem(\"emailForSignIn\", email);\n        alert(\"Please check your email\");\n        setNewUser(false);\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  };   */\n\n  if (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n    var email = window.localStorage.getItem(\"emailForSignIn\");\n    if (!email) {\n      email = window.prompt(\"Please provide your email for confirmation\");\n    }\n    firebase\n      .auth()\n      .signInWithEmailLink(email, window.location.href)\n      .then((result) => {\n        window.localStorage.removeItem(\"emailForSignIn\");\n        console.log(result.user.email);\n        const email = result.user.email;\n        const name = result.user.displayName;\n        const newUser = {\n          email: email,\n          name: name,\n        };\n        setLoggedInUser(newUser);\n        history.push(\"/profile\");\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n  const loginGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((res) => {\n        console.log(res);\n        setLoggedInUser({ email: res.user.email, name: res.user.displayName });\n        history.push(\"/profile\");\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n\n  const handleResetPassword = (passwordResetEmail) => {\n    console.log(\"reset password\");\n    var auth = firebase.auth();\n    var emailAddress = loggedInUser.email;\n    auth\n      .sendPasswordResetEmail(emailAddress)\n      .then(function (res) {\n        // Email sent.\n        alert(\"Email sent\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        alert(error.message);\n      });\n  };\n\n  return (\n    <div>\n      <section style={style}>\n        <div className=\"container  \">\n          <div className=\"d-flex justify-content-center align-items-center m-2 p-3\">\n            <div className=\" mt-5 p-3 \" style={{ backgroundColor: \"white\" }}>\n              <div className=\"row d-flex align-items-center\">\n                <div className=\"col-md-8 col-sm-6 text-md-left text-center \">\n                  <div>\n                    <h2 className=\"h2\">Know Thyself</h2>\n                  </div>\n\n                  <p className=\"text-muted  text-center\">\n                    Sign in to start your session\n                  </p>\n                </div>\n                <div className=\"col-md-4 text-md-left text-center mb-2\">\n                  <img src={img} style={{ width: \"100px\" }} alt=\"\" />\n                </div>\n              </div>\n\n              {newUser && (\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control mb-2\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    onChange={handleChange}\n                    placeholder=\"First name\"\n                    required\n                  />\n                </div>\n              )}\n\n              {newUser && (\n                <div className=\" form-group\">\n                  <input\n                    className=\"form-control mb-2\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    onChange={handleChange}\n                    placeholder=\"Last name\"\n                    required\n                  />\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control mb-2\"\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  placeholder=\"Enter email\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control mb-2\"\n                  type=\"password\"\n                  onChange={handleChange}\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                />\n              </div>\n\n              <div className=\"row \">\n                <div className=\"col-md-8\">\n                  {newUser ? (\n                    <div className=\"d-flex justify-content-start\">\n                      <p className=\"forgot-password \">\n                        <span\n                          className=\"text-danger\"\n                          style={{ cursor: \"pointer\" }}\n                          onClick={() => setNewUser(!newUser)}\n                        >\n                          Already registered?\n                        </span>\n                      </p>\n                    </div>\n                  ) : (\n                    <div className=\"d-flex justify-content-start\">\n                      <p className=\"forgot-password \">\n                        <span\n                          className=\"text-danger\"\n                          style={{ cursor: \"pointer\" }}\n                          onClick={() => setNewUser(!newUser)}\n                        >\n                          Not yet registered?\n                        </span>\n                      </p>\n                    </div>\n                  )}\n\n                  <div className=\"d-flex justify-content-start\">\n                    <p className=\"forgot-password \">\n                      <span\n                        className=\"text-danger\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={handleResetPassword}\n                      >\n                        Reset Password\n                      </span>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end\">\n                  {newUser ? (\n                    <div>\n                      <button\n                        className=\" text-light btn btn-danger\"\n                        onClick={handleSignUp}\n                      >\n                        Sign Up\n                      </button>\n                    </div>\n                  ) : (\n                    <div>\n                      <button\n                        className=\"text-light btn btn-danger\"\n                        onClick={handleSubmit}\n                      >\n                        Sign in\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div onClick={loginGoogle} className=\"google\">\n            Continue with Google\n          </div>\n          <div className=\"text-center d-flex row justify-content-center\">\n            <div\n              style={{ color: \"#810202\" }}\n              className=\"quote text-center mt-5 p-1 col-md-6 col-10\"\n            >\n              <blockquote>\n                <i className=\"quoteText\">\n                  Knowing Self is an endless pursuit that gets you closer to\n                  excellence\n                </i>\n              </blockquote>\n              <figcaption>&mdash; Himanshu </figcaption>\n            </div>\n          </div>\n          <div>\n            <p className=\"mt-5 text-center\" style={{ color: \"white\" }}>\n              © 2020 Centre of Strategic Mindset, All Rights Reserved\n            </p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminPage\\AdminPage.js",["302","303","304","305","306","307"],"import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { UserContext } from \"../../../../App\";\nimport AdminNavBar from \"../AdminNavBar/AdminNavBar\";\nimport UserData from \"../UserData/UserData\";\n\nconst AdminPage = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [allAnswer, setAllAnswer] = useState([]);\n  const [uniqueEmail, setUniqueEmail] = useState(0);\n\n  useEffect(() => {\n    fetch(\"https://damp-woodland-24997.herokuapp.com/allAnswer\")\n      .then((res) => res.json())\n      .then((data) => {\n        setAllAnswer(data);\n      });\n  }, []);\n\n  const allEmail = [];\n  const allKyes = allAnswer.map((question) => {\n    allEmail.push(question.email);\n  });\n\n  const useFilter = (arr) => {\n    return arr.filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    });\n  };\n\n  const unique = useFilter(allEmail);\n\n  const allUniqueEmail = [];\n\n  for (let i = 0; i < unique.length; i++) {\n    const element = unique[i];\n    const uniqueEmail = allAnswer.find((answer) => {\n      return answer.email === element;\n    });\n\n    allUniqueEmail.push(uniqueEmail);\n  }\n\n  return (\n    <>\n      <AdminNavBar></AdminNavBar>\n      <div className=\"container\">\n        <div className=\"row mb-2 ml-4\">\n          <div className=\"col-md-6\">\n            <h3 style={{ color: \"#800000\" }} className=\"my-3\">\n              All User information\n            </h3>\n          </div>\n          <div className=\"searchBar mt-3 d-flex\">\n            <input\n              class=\"form-control mr-sm-2 mt-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n              // onChange={handleSearchWord}\n            ></input>\n            <button\n              class=\"btn btn-outline-success my-2 my-sm-0\"\n              // onClick={search}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n        {allUniqueEmail.map((uniqueEmail) => (\n          <UserData uniqueEmail={uniqueEmail}></UserData>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default AdminPage;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\AdminSeeUserResult.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\UserDetails\\UserDetails.js",["308"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AdminNavBar from \"../AdminNavBar/AdminNavBar\";\n\nconst UserDetails = () => {\n  const { id } = useParams();\n\n  const [userDetails, setUserDetails] = useState({});\n  console.log(userDetails);\n  const {\n    name,\n    email,\n    firstName,\n    lastName,\n    gender,\n    age,\n    Industry,\n    companyName,\n    position,\n    leaders,\n    ClientFacing,\n    experiences,\n    about,\n  } = userDetails;\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/userDetails`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          // setLoggedInUser(data[0]);\n          setUserDetails(data[0]);\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <>\n        <AdminNavBar></AdminNavBar>\n        <div>\n          <div className=\"container profile-page\">\n            <div className=\"col-md-10 row mx-auto mt-4 py-4 py-md-5 px-md-5 info-card\">\n              <div className=\"col-md-12 col-lg-9 pl-md-5 pb-5 pt-3 box\">\n                <hr />\n                <div className=\"mb-4\">\n                  <h3>User Details </h3>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Email\">Email</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"email\"\n                        placeholder=\"Your email\"\n                        defaultValue={email}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"User Name\">User Name</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"name\"\n                        placeholder=\"user name\"\n                        defaultValue={name}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <hr />\n                <div className=\"mb-4\">\n                  <h3>Profile Details</h3>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"First Name\">First Name</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"firstName\"\n                        placeholder=\"first name\"\n                        type=\"text\"\n                        defaultValue={firstName}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Last Name\">Last Name</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"lastName\"\n                        placeholder=\"last name\"\n                        defaultValue={lastName}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Gender\">Gender</label>\n                    </div>\n                    <div className=\"col-md-8\">\n                      <input name=\"gender\" defaultValue={gender} type=\"text\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4 pt-2\">\n                      <label htmlFor=\"Age\">Age</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"age\"\n                        placeholder=\"Age in years\"\n                        type=\"text\"\n                        defaultValue={age}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/*--------------------------------------------------------------------Industry*/}\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Industry\">Industry</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"Industry\"\n                        type=\"text\"\n                        defaultValue={Industry}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Company Name\">Company Name</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"companyName\"\n                        placeholder=\"Company Name\"\n                        defaultValue={companyName}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* --------------------------------------------------------------position */}\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Position\">Position</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"position\"\n                        type=\"text\"\n                        defaultValue={position}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Level of leaders\">\n                        Level of Leadership\n                      </label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"leaders\"\n                        type=\"text\"\n                        defaultValue={leaders}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/*--------------------------------------------------------------------Client facing*/}\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Client facing\">Functions</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"ClientFacing\"\n                        type=\"text\"\n                        defaultValue={ClientFacing}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/*----------------------------------------------------------------------experiences*/}\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"Years of experience\">\n                        Years of experience\n                      </label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <input\n                        name=\"experiences\"\n                        placeholder=\"Years of experience\"\n                        defaultValue={experiences}\n                        type=\"number\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"About\">About</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <textarea\n                        placeholder=\"one line description about you\"\n                        name=\"about\"\n                        rows=\"3\"\n                        defaultValue={about}\n                      ></textarea>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default UserDetails;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminProfile\\AdminProfile.js",["309","310","311"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../../../App\";\nimport AdminNavBar from \"../AdminNavBar/AdminNavBar\";\n\nconst AdminProfile = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  let history = useHistory();\n  let location = useLocation();\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/userDetails`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setLoggedInUser(data[0]);\n          history.push(\"/admin\");\n        }\n      });\n  }, []);\n\n  const [userDetails, setUserDetails] = useState({\n    ...loggedInUser,\n    gender: \"Male\",\n    age: \"\",\n    companyName: \"\",\n    position: \"Chairman/Board Member/Independent Director\",\n    about: \"\",\n    phone: \"\",\n    experiences: \"\",\n    Industry: \"Agriculture and Allied Industries\",\n    leaders: \"top level\",\n    ClientFacing: \"General Management\",\n  });\n\n  const handleInput = (e) => {\n    const newUserDetails = { ...userDetails };\n    newUserDetails[e.target.name] = e.target.value;\n    setUserDetails(newUserDetails);\n  };\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n\n  const handleSubmit = () => {\n    if (\n      userDetails.companyName &&\n      userDetails.name &&\n      userDetails.firstName &&\n      userDetails.position &&\n      userDetails.Industry &&\n      userDetails.gender &&\n      userDetails.leaders\n    ) {\n      fetch(\"https://damp-woodland-24997.herokuapp.com/addUser\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify(userDetails),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          alert(\"User added successfully\");\n          setLoggedInUser(userDetails);\n          history.push(\"/admin\");\n        });\n    } else {\n      alert(\"Please submit all data.\");\n    }\n  };\n\n  return (\n    <>\n      <AdminNavBar></AdminNavBar>\n      <div>\n        <div className=\"container profile-page\">\n          <div className=\"col-md-10 row mx-auto mt-4 py-4 py-md-5 px-md-5 info-card\">\n            <div className=\"col-md-12 col-lg-9 pl-md-5 pb-5 pt-3 box\">\n              <hr />\n              <div className=\"mb-4\">\n                <h3>Account Setting</h3>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Email\">Email</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      name=\"email\"\n                      onChange={handleInput}\n                      placeholder=\"Your email\"\n                      defaultValue={loggedInUser.email}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"User Name\">User Name</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      name=\"name\"\n                      onChange={handleInput}\n                      placeholder=\"user name\"\n                      defaultValue={loggedInUser.name}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <hr />\n              <div className=\"mb-4\">\n                <h3>Profile Setting</h3>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"First Name\">First Name</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      name=\"firstName\"\n                      onChange={handleInput}\n                      placeholder=\"first name\"\n                      type=\"text\"\n                      defaultValue={loggedInUser.firstName}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Last Name\">Last Name</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      name=\"lastName\"\n                      onChange={handleInput}\n                      placeholder=\"last name\"\n                      defaultValue={loggedInUser.lastName}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Gender\">Gender</label>\n                  </div>\n                  <div className=\"col-md-8\">\n                    <select\n                      onChange={handleInput}\n                      name=\"gender\"\n                      class=\"width-40\"\n                      defaultValue={loggedInUser.gender}\n                    >\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                      <option value=\"TransMale\">TransMale</option>\n                      <option value=\"TransFemale\">TransFemale</option>\n                      <option value=\"Something Else\">Something Else</option>\n                      <option value=\"Decline to Answer\">\n                        Decline to Answer\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 pt-2\">\n                    <label htmlFor=\"Age\">Age</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"age\"\n                      placeholder=\"Age in years\"\n                      type=\"text\"\n                      defaultValue={loggedInUser.age}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/*--------------------------------------------------------------------Industry*/}\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Industry\">Industry</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <select\n                      onChange={handleInput}\n                      name=\"Industry\"\n                      class=\"width-40\"\n                      defaultValue={loggedInUser.Industry}\n                    >\n                      <option value=\"Agriculture and Allied Industries\">\n                        Agriculture and Allied Industries\n                      </option>\n                      <option value=\"Automobiles and Auto Components\">\n                        Automobiles and Auto Components\n                      </option>\n\n                      <option value=\"Accounting Services\">\n                        Accounting Services\n                      </option>\n                      <option value=\"Aviation\">Aviation</option>\n                      <option value=\"Banking\">Banking</option>\n                      <option value=\"Big Data and Artificial Intelligence\">\n                        Big Data and Artificial Intelligence\n                      </option>\n                      <option value=\"Cement\">Cement</option>\n                      <option value=\"Consumer Durables\">\n                        Consumer Durables\n                      </option>\n                      <option value=\"Consulting\">Consulting</option>\n                      <option value=\"Defense\">Defense</option>\n                      <option value=\"ECommerce\">ECommerce</option>\n                      <option value=\"Education and Training\">\n                        Education and Training\n                      </option>\n                      <option value=\"Engineering and Capital Goods\">\n                        Engineering and Capital Goods\n                      </option>\n                      <option value=\"Financial Services\">\n                        Financial Services\n                      </option>\n                      <option value=\"FMCG\">FMCG</option>\n                      <option value=\"Gems and Jewellery\">\n                        Gems and Jewellery\n                      </option>\n                      <option value=\"Healthcare and Diagnostics\">\n                        Healthcare and Diagnostics\n                      </option>\n                      <option value=\"Infrastructure\">Infrastructure</option>\n                      <option value=\"IT and ITeS\">IT and ITeS</option>\n                      <option value=\"Logistics and Supply Chain\">\n                        Logistics and Supply Chain\n                      </option>\n                      <option value=\"Manufacturing\">Manufacturing</option>\n                      <option value=\"Marine Industries\">\n                        Marine Industries\n                      </option>\n                      <option value=\"Media and Entertainment\">\n                        Media and Entertainment{\" \"}\n                      </option>\n                      <option value=\"Metals and Mining\">\n                        Metals and Mining\n                      </option>\n                      <option value=\"Oil and Gas\">Oil and Gas</option>\n                      <option value=\"Pharmaceuticals\">Pharmaceuticals</option>\n                      <option value=\"Ports\">Ports</option>\n                      <option value=\"Power\">Power</option>\n                      <option value=\"Railways\">Railways</option>\n                      <option value=\"Real Estate\">Real Estate</option>\n                      <option value=\"Renewable Energy\">Renewable Energy</option>\n                      <option value=\"Retail\">Retail</option>\n                      <option value=\"Roads and Highways\">\n                        Roads and Highways\n                      </option>\n                      <option value=\"Science and Technology\">\n                        Science and Technology\n                      </option>\n                      <option value=\"Services\">Services</option>\n                      <option value=\"Shipping and Cargo\">\n                        Shipping and Cargo\n                      </option>\n                      <option value=\"Space Exploration\">\n                        Space Exploration\n                      </option>\n                      <option value=\"Steel\">Steel</option>\n                      <option value=\"Telecommunications\">\n                        Telecommunications\n                      </option>\n                      <option value=\"Textiles\">Textiles</option>\n                      <option value=\"Tourism and Hospitality\">\n                        Tourism and Hospitality\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Company Name\">Company Name</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"companyName\"\n                      placeholder=\"Company Name\"\n                      defaultValue={loggedInUser.companyName}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* --------------------------------------------------------------position */}\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Position\">Position</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <select\n                      onChange={handleInput}\n                      name=\"position\"\n                      class=\"width-40\"\n                      defaultValue={loggedInUser.position}\n                    >\n                      <option value=\"Chairman/Board Member/Independent Director\">\n                        Chairman/Board Member/Independent Director\n                      </option>\n                      <option value=\"CEO/MD\">CEO/MD</option>\n                      <option value=\"Founder/Promoter/Entrepreneur\">\n                        Founder/Promoter/Entrepreneur\n                      </option>\n                      <option value=\"President/CFO/CIO/CMO/CHRO\">\n                        President/CFO/CIO/CMO/CHRO\n                      </option>\n                      <option value=\"Executive Vice President/Partner\">\n                        Executive Vice President/Partner\n                      </option>\n                      <option value=\"SVP\">SVP</option>\n                      <option value=\"VP/Director\">VP/Director</option>\n                      <option value=\"General Manager\">General Manager</option>\n                      <option value=\"Assocciate VP/Principal Consultant\">\n                        Assocciate VP/Principal Consultant\n                      </option>\n                      <option value=\"Assistant VP/Associate Director\">\n                        Assistant VP/Associate Director\n                      </option>\n                      <option value=\"Senior Manager\">Senior Manager</option>\n                      <option value=\"Manager/Consultant\">\n                        Manager/Consultant\n                      </option>\n                      <option value=\"Assistant Manager\">\n                        Assistant Manager\n                      </option>\n                      <option value=\"Senior Associates\">\n                        Senior Associates\n                      </option>\n                      <option value=\"Associates\">Associates</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Level of leaders\">\n                      Level of Leadership\n                    </label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <select\n                      onChange={handleInput}\n                      name=\"leaders\"\n                      class=\"width-40\"\n                      defaultValue={loggedInUser.leaders}\n                    >\n                      <option value=\"top level\">Top level</option>\n                      <option value=\"senior level\">Senior Level</option>\n                      <option value=\"mid level\">Mid level</option>\n                      <option value=\"emerging\">Emerging</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              {/*--------------------------------------------------------------------Client facing*/}\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Client facing\">Functions</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <select\n                      onChange={handleInput}\n                      name=\"ClientFacing\"\n                      class=\"width-40\"\n                      defaultValue={loggedInUser.ClientFacing}\n                    >\n                      <option value=\"General Management\">\n                        General Management\n                      </option>\n                      <option value=\"Finance/Accounting/Tax\">\n                        Finance/Accounting/Tax\n                      </option>\n\n                      <option value=\"Human Resource\">Human Resource</option>\n                      <option value=\"Sales/Pre-Sales\">Sales/Pre-Sales</option>\n\n                      <option value=\"Marketing\">Marketing</option>\n                      <option value=\"Operations/Delivery\">\n                        Operations/Delivery\n                      </option>\n\n                      <option value=\"Customer Experience\">\n                        Customer Experience\n                      </option>\n                      <option value=\"Purchase and Procurement\">\n                        Purchase and Procurement\n                      </option>\n\n                      <option value=\"R and D/Innovation\">\n                        R and D/Innovation\n                      </option>\n                      <option value=\"Industrial Relationships\">\n                        Industrial Relationships\n                      </option>\n\n                      <option value=\"Media and Communications\">\n                        Media and Communications\n                      </option>\n                      <option value=\"Investor Relationships\">\n                        Investor Relationships\n                      </option>\n\n                      <option value=\"Sustainability\">Sustainability</option>\n                      <option value=\"Public Relationships\">\n                        Public Relationships\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              {/*----------------------------------------------------------------------experiences*/}\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Years of experience\">\n                      Years of experience\n                    </label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"experiences\"\n                      placeholder=\"Years of experience\"\n                      defaultValue={loggedInUser.experiences}\n                      type=\"number\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"About\">About</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <textarea\n                      onChange={handleInput}\n                      placeholder=\"one line description about you\"\n                      name=\"about\"\n                      rows=\"3\"\n                      defaultValue={loggedInUser.about}\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-center mt-4 mb-4\">\n            {loggedInUser.companyName &&\n            loggedInUser.name &&\n            loggedInUser.position &&\n            loggedInUser.Industry &&\n            loggedInUser.gender &&\n            loggedInUser.leaders ? (\n              <div>complete</div>\n            ) : (\n              <button onClick={handleSubmit} className=\"btn btn-success \">\n                Finish\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminProfile;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\ResultPage\\ResultPage.js",["312","313","314","315","316","317","318","319","320","321"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport img from \"../../../src/Image/Picture1.png\";\nimport { UserContext } from \"../../App\";\nimport ClientNavSection from \"../Client/ClientNavSection/ClientNavSection\";\nimport \"./ResultPage.css\";\nimport SingleResultPage from \"./SingleResultPage\";\n\nconst ResultPage = ({ id }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [count, setCount] = useState(0);\n  const [startPoint, setStatPoint] = useState(0);\n  const [endPoint, setEndPoint] = useState(1);\n\n  const handleBothCount = () => {\n    console.log(startPoint, endPoint);\n  };\n\n  const [allAnswer, setAllAnswer] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newAllAnswer = data.filter((answer) => answer.header === id);\n        setAllAnswer(newAllAnswer);\n      });\n  }, []);\n\n  return (\n    <>\n      <div>\n        {allAnswer.map((answer) => (\n          <SingleResultPage singleAnswer={answer}></SingleResultPage>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default ResultPage;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\FinalResult\\FinalResult.js",["322","323","324","325","326"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport OneNumber from \"../AllResultPage/OneNumber/OneNumber\";\n\nimport PDFDownloader from \"../../Components/HelperComponent/PDFDownloader\";\n\nimport ResultPage from \"../ResultPage/ResultPage\";\nimport \"./FinalResult.css\";\nimport { UserContext } from \"../../App\";\n\nconst FinalResult = () => {\n  const { id } = useParams();\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const history = useHistory();\n\n  const [locationKeys, setLocationKeys] = useState([]);\n\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === \"PUSH\") {\n        setLocationKeys([location.key]);\n      }\n\n      if (history.action === \"POP\") {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys]) => keys);\n\n          console.log(\"forward\");\n          // Handle forward event\n        } else {\n          setLocationKeys((keys) => [location.key, ...keys]);\n\n          // Handle back event\n\n          handleLogOut();\n        }\n      }\n    });\n  }, [locationKeys]);\n\n  const reload = () => {\n    window.location.reload();\n  };\n  const handleLogOut = () => {\n    const newUser = {\n      name: \"\",\n      email: \"\",\n      photo: \"\",\n      totalScore: 0,\n      selectedAnswerArray: [],\n    };\n    setLoggedInUser(newUser);\n    history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <OneNumber id={id}></OneNumber>\n      </div>\n    </div>\n  );\n};\n\nexport default FinalResult;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\VarifyEmail\\VarifyEmail.js",["327","328"],"import React, { useContext } from \"react\";\nimport { UserContext } from \"../../../App\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"../../Login/firebaseConfig\";\nimport { useHistory } from \"react-router-dom\";\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst VerifyEmail = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n\n  const handleSignUp = () => {\n    const email = loggedInUser.email;\n    console.log(email);\n\n    const actionCodeSettings = {\n      // Replace this URL with the URL where the user will complete sign-in.\n      url: \"http://localhost:3000/myProfile\",\n      handleCodeInApp: true,\n    };\n\n    firebase\n      .auth()\n      .sendSignInLinkToEmail(email, actionCodeSettings)\n      .then(() => {\n        // The link was successfully sent. Inform the user.\n        // Save the email locally so you don't need to ask the user for it again\n        // if they open the link on the same device.\n        window.localStorage.setItem(\"emailForSignIn\", email);\n        // ...\n        alert(\"Please check your email\");\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n        // ...\n      });\n    // [END auth_email_link_send]\n  };\n\n  // Confirm the link is a sign-in with email link.\n  if (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n    var email = window.localStorage.getItem(\"emailForSignIn\");\n    if (!email) {\n      email = window.prompt(\"Please provide your email for confirmation\");\n    }\n    // The client SDK will parse the code from the link for you.\n    firebase\n      .auth()\n      .signInWithEmailLink(email, window.location.href)\n      .then((result) => {\n        // Clear email from storage.\n        window.localStorage.removeItem(\"emailForSignIn\");\n        console.log(result);\n        // Signed in\n        const newUser = { ...loggedInUser };\n        newUser.email = result.user.email;\n        setLoggedInUser(newUser);\n        history.push(\"/profile\");\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  }\n\n  const handleVarify = () => {\n    console.log(\"click\");\n  };\n\n  return (\n    <>\n      <ClientNavSection></ClientNavSection>\n      <div onClick={handleVarify} className=\"google\">\n        Continue with Google\n      </div>\n    </>\n  );\n};\n\nexport default VerifyEmail;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\MyProfile\\MyProfile.js",["329","330"],"import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport NavBarSection from \"../../Home/NavBarSection/NavBarSection\";\nimport ClientNavSection from \"../ClientNavSection/ClientNavSection\";\nimport \"./MyProfile.css\";\n\nconst MyProfile = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  let history = useHistory();\n  let location = useLocation();\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/userDetails`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setLoggedInUser(data[0]);\n          history.push(\"/profile\");\n        }\n      });\n  }, []);\n\n  const [userDetails, setUserDetails] = useState({\n    ...loggedInUser,\n    gender: \"Male\",\n    age: \"\",\n    companyName: \"\",\n    position: \"Chairman/Board Member/Independent Director\",\n    about: \"\",\n    phone: \"\",\n    // website: \"\",\n    // facebook: \"\",\n    // LinkedIn: \"\",\n    // twitter: \"\",\n    // maritalStatus: \"single\",\n    experiences: \"\",\n    Industry: \"Agriculture and Allied Industries\",\n    // Regions: \"\",\n    leaders: \"top level\",\n    ClientFacing: \"General Management\",\n  });\n\n  const handleInput = (e) => {\n    const newUserDetails = { ...userDetails };\n    newUserDetails[e.target.name] = e.target.value;\n    setUserDetails(newUserDetails);\n  };\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n\n  const handleSubmit = () => {\n    if (\n      userDetails.companyName &&\n      userDetails.name &&\n      userDetails.firstName &&\n      userDetails.position &&\n      userDetails.Industry &&\n      userDetails.gender &&\n      userDetails.leaders\n    ) {\n      fetch(\"https://damp-woodland-24997.herokuapp.com/addUser\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify(userDetails),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          alert(\"User added successfully\");\n          setLoggedInUser(userDetails);\n          history.replace(from);\n        });\n    } else {\n      alert(\"Please submit all data.\");\n    }\n  };\n\n  return (\n    <>\n      {loggedInUser.email ? (\n        <>\n          <ClientNavSection></ClientNavSection>\n\n          <div>\n            <div className=\"container profile-page\">\n              <div className=\"col-md-10 row mx-auto mt-4 py-4 py-md-5 px-md-5 info-card\">\n                {/* <div className=\"col-md-4 profile-photo  col-lg-3 text-center\">\n              <div className=\"profile-photo\">\n                <img className=\"img-fluid \" src={loggedInUser.photo} alt=\"\" />\n              </div>\n              <a class=\"btn vd_btn  vd_bg-blue\" href=\"\">\n                <i class=\"fa fa-cloud-upload append-icon\"></i> Upload\n              </a>\n\n              <button className=\"btn btn-primary\">Edit Profile</button>\n            </div> */}\n                <div className=\"col-md-12 col-lg-9 pl-md-5 pb-5 pt-3 box\">\n                  <hr />\n                  <div className=\"mb-4\">\n                    <h3>Account Setting</h3>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Email\">Email</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          name=\"email\"\n                          onChange={handleInput}\n                          placeholder=\"Your email\"\n                          defaultValue={loggedInUser.email}\n                          type=\"text\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"User Name\">User Name</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          name=\"name\"\n                          onChange={handleInput}\n                          placeholder=\"user name\"\n                          defaultValue={loggedInUser.name}\n                          type=\"text\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <hr />\n                  <div className=\"mb-4\">\n                    <h3>Profile Setting</h3>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"First Name\">First Name</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          name=\"firstName\"\n                          onChange={handleInput}\n                          placeholder=\"first name\"\n                          type=\"text\"\n                          defaultValue={loggedInUser.firstName}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Last Name\">Last Name</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          name=\"lastName\"\n                          onChange={handleInput}\n                          placeholder=\"last name\"\n                          defaultValue={loggedInUser.lastName}\n                          type=\"text\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Gender\">Gender</label>\n                      </div>\n                      <div className=\"col-md-8\">\n                        <select\n                          onChange={handleInput}\n                          name=\"gender\"\n                          class=\"width-40\"\n                          defaultValue={loggedInUser.gender}\n                        >\n                          <option value=\"Male\">Male</option>\n                          <option value=\"Female\">Female</option>\n                          <option value=\"TransMale\">TransMale</option>\n                          <option value=\"TransFemale\">TransFemale</option>\n                          <option value=\"Something Else\">Something Else</option>\n                          <option value=\"Decline to Answer\">\n                            Decline to Answer\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4 pt-2\">\n                        <label htmlFor=\"Age\">Age</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          onChange={handleInput}\n                          name=\"age\"\n                          placeholder=\"Age in years\"\n                          type=\"text\"\n                          defaultValue={loggedInUser.age}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* <div className=\"form-group\">----------------------------------------Marital status\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Marital Status\">Marital Status</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <select\n                      onChange={handleInput}\n                      name=\"maritalStatus\"\n                      class=\"width-40\"\n                      defaultValue={loggedInUser.maritalStatus}\n                    >\n                      <option value=\"single\">Single</option>\n                      <option value=\"married\">Married</option>\n                      <option value=\"not share\">Decline to answer</option>\n                    </select>\n                  </div>\n                </div>\n              </div> */}\n\n                  {/* <div className=\"form-group\"> ----------------------------------region \n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Regions\">Regions</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"Regions\"\n                      placeholder=\"Regions\"\n                      defaultValue={loggedInUser.Regions}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div> */}\n\n                  {/*--------------------------------------------------------------------Industry*/}\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Industry\">Industry</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <select\n                          onChange={handleInput}\n                          name=\"Industry\"\n                          class=\"width-40\"\n                          defaultValue={loggedInUser.Industry}\n                        >\n                          <option value=\"Agriculture and Allied Industries\">\n                            Agriculture and Allied Industries\n                          </option>\n                          <option value=\"Automobiles and Auto Components\">\n                            Automobiles and Auto Components\n                          </option>\n\n                          <option value=\"Accounting Services\">\n                            Accounting Services\n                          </option>\n                          <option value=\"Aviation\">Aviation</option>\n                          <option value=\"Banking\">Banking</option>\n                          <option value=\"Big Data and Artificial Intelligence\">\n                            Big Data and Artificial Intelligence\n                          </option>\n                          <option value=\"Cement\">Cement</option>\n                          <option value=\"Consumer Durables\">\n                            Consumer Durables\n                          </option>\n                          <option value=\"Consulting\">Consulting</option>\n                          <option value=\"Defense\">Defense</option>\n                          <option value=\"ECommerce\">ECommerce</option>\n                          <option value=\"Education and Training\">\n                            Education and Training\n                          </option>\n                          <option value=\"Engineering and Capital Goods\">\n                            Engineering and Capital Goods\n                          </option>\n                          <option value=\"Financial Services\">\n                            Financial Services\n                          </option>\n                          <option value=\"FMCG\">FMCG</option>\n                          <option value=\"Gems and Jewellery\">\n                            Gems and Jewellery\n                          </option>\n                          <option value=\"Healthcare and Diagnostics\">\n                            Healthcare and Diagnostics\n                          </option>\n                          <option value=\"Infrastructure\">Infrastructure</option>\n                          <option value=\"IT and ITeS\">IT and ITeS</option>\n                          <option value=\"Logistics and Supply Chain\">\n                            Logistics and Supply Chain\n                          </option>\n                          <option value=\"Manufacturing\">Manufacturing</option>\n                          <option value=\"Marine Industries\">\n                            Marine Industries\n                          </option>\n                          <option value=\"Media and Entertainment\">\n                            Media and Entertainment{\" \"}\n                          </option>\n                          <option value=\"Metals and Mining\">\n                            Metals and Mining\n                          </option>\n                          <option value=\"Oil and Gas\">Oil and Gas</option>\n                          <option value=\"Pharmaceuticals\">\n                            Pharmaceuticals\n                          </option>\n                          <option value=\"Ports\">Ports</option>\n                          <option value=\"Power\">Power</option>\n                          <option value=\"Railways\">Railways</option>\n                          <option value=\"Real Estate\">Real Estate</option>\n                          <option value=\"Renewable Energy\">\n                            Renewable Energy\n                          </option>\n                          <option value=\"Retail\">Retail</option>\n                          <option value=\"Roads and Highways\">\n                            Roads and Highways\n                          </option>\n                          <option value=\"Science and Technology\">\n                            Science and Technology\n                          </option>\n                          <option value=\"Services\">Services</option>\n                          <option value=\"Shipping and Cargo\">\n                            Shipping and Cargo\n                          </option>\n                          <option value=\"Space Exploration\">\n                            Space Exploration\n                          </option>\n                          <option value=\"Steel\">Steel</option>\n                          <option value=\"Telecommunications\">\n                            Telecommunications\n                          </option>\n                          <option value=\"Textiles\">Textiles</option>\n                          <option value=\"Tourism and Hospitality\">\n                            Tourism and Hospitality\n                          </option>\n                          <option value=\"Other\">Other</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Company Name\">Company Name</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          onChange={handleInput}\n                          name=\"companyName\"\n                          placeholder=\"Company Name\"\n                          defaultValue={loggedInUser.companyName}\n                          type=\"text\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  {/* --------------------------------------------------------------position */}\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Position\">Position</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <select\n                          onChange={handleInput}\n                          name=\"position\"\n                          class=\"width-40\"\n                          defaultValue={loggedInUser.position}\n                        >\n                          <option value=\"Chairman/Board Member/Independent Director\">\n                            Chairman/Board Member/Independent Director\n                          </option>\n                          <option value=\"CEO/MD\">CEO/MD</option>\n                          <option value=\"Founder/Promoter/Entrepreneur\">\n                            Founder/Promoter/Entrepreneur\n                          </option>\n                          <option value=\"President/CFO/CIO/CMO/CHRO\">\n                            President/CFO/CIO/CMO/CHRO\n                          </option>\n                          <option value=\"Executive Vice President/Partner\">\n                            Executive Vice President/Partner\n                          </option>\n                          <option value=\"SVP\">SVP</option>\n                          <option value=\"VP/Director\">VP/Director</option>\n                          <option value=\"General Manager\">\n                            General Manager\n                          </option>\n                          <option value=\"Assocciate VP/Principal Consultant\">\n                            Assocciate VP/Principal Consultant\n                          </option>\n                          <option value=\"Assistant VP/Associate Director\">\n                            Assistant VP/Associate Director\n                          </option>\n                          <option value=\"Senior Manager\">Senior Manager</option>\n                          <option value=\"Manager/Consultant\">\n                            Manager/Consultant\n                          </option>\n                          <option value=\"Assistant Manager\">\n                            Assistant Manager\n                          </option>\n                          <option value=\"Senior Associates\">\n                            Senior Associates\n                          </option>\n                          <option value=\"Associates\">Associates</option>\n                          <option value=\"Other\">Other</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Level of leaders\">\n                          Level of Leadership\n                        </label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <select\n                          onChange={handleInput}\n                          name=\"leaders\"\n                          class=\"width-40\"\n                          defaultValue={loggedInUser.leaders}\n                        >\n                          <option value=\"top level\">Top level</option>\n                          <option value=\"senior level\">Senior Level</option>\n                          <option value=\"mid level\">Mid level</option>\n                          <option value=\"emerging\">Emerging</option>\n                          <option value=\"Other\">Other</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/*--------------------------------------------------------------------Client facing*/}\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Client facing\">Functions</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <select\n                          onChange={handleInput}\n                          name=\"ClientFacing\"\n                          class=\"width-40\"\n                          defaultValue={loggedInUser.ClientFacing}\n                        >\n                          <option value=\"General Management\">\n                            General Management\n                          </option>\n                          <option value=\"Finance/Accounting/Tax\">\n                            Finance/Accounting/Tax\n                          </option>\n\n                          <option value=\"Human Resource\">Human Resource</option>\n                          <option value=\"Sales/Pre-Sales\">\n                            Sales/Pre-Sales\n                          </option>\n\n                          <option value=\"Marketing\">Marketing</option>\n                          <option value=\"Operations/Delivery\">\n                            Operations/Delivery\n                          </option>\n\n                          <option value=\"Customer Experience\">\n                            Customer Experience\n                          </option>\n                          <option value=\"Purchase and Procurement\">\n                            Purchase and Procurement\n                          </option>\n\n                          <option value=\"R and D/Innovation\">\n                            R and D/Innovation\n                          </option>\n                          <option value=\"Industrial Relationships\">\n                            Industrial Relationships\n                          </option>\n\n                          <option value=\"Media and Communications\">\n                            Media and Communications\n                          </option>\n                          <option value=\"Investor Relationships\">\n                            Investor Relationships\n                          </option>\n\n                          <option value=\"Sustainability\">Sustainability</option>\n                          <option value=\"Public Relationships\">\n                            Public Relationships\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/*----------------------------------------------------------------------experiences*/}\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"Years of experience\">\n                          Years of experience\n                        </label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <input\n                          onChange={handleInput}\n                          name=\"experiences\"\n                          placeholder=\"Years of experience\"\n                          defaultValue={loggedInUser.experiences}\n                          type=\"number\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <label htmlFor=\"About\">About</label>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <textarea\n                          onChange={handleInput}\n                          placeholder=\"one line description about you\"\n                          name=\"about\"\n                          rows=\"3\"\n                          defaultValue={loggedInUser.about}\n                        ></textarea>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* <hr />\n              <div className=\"mb-4\">\n                <h3>Contact Setting</h3>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Mobile Phone\">Mobile Phone</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"phone\"\n                      placeholder=\"Mobile Phone\"\n                      defaultValue={loggedInUser.phone}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Facebook\">Facebook</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"facebook\"\n                      placeholder=\"Facebook profile link\"\n                      defaultValue={loggedInUser.facebook}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"LinkedIn\">LinkedIn</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"LinkedIn\"\n                      placeholder=\"LinkedIn profile link.\"\n                      defaultValue={loggedInUser.LinkedIn}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Website\">Website</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"website\"\n                      placeholder=\"Portfolio website link\"\n                      defaultValue={loggedInUser.website}\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"Twitter\">Twitter</label>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <input\n                      onChange={handleInput}\n                      name=\"twitter\"\n                      defaultValue={loggedInUser.twitter}\n                      placeholder=\"Twitter profile link\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n              </div> */}\n\n                  {/* finished line  */}\n                </div>\n              </div>\n              <div className=\"text-center mt-4 mb-4\">\n                {loggedInUser.companyName &&\n                loggedInUser.name &&\n                loggedInUser.position &&\n                loggedInUser.Industry &&\n                loggedInUser.gender &&\n                loggedInUser.leaders ? (\n                  <div>complete</div>\n                ) : (\n                  <button onClick={handleSubmit} className=\"btn btn-success \">\n                    Finish\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/profile\",\n            state: { from: location },\n          }}\n        ></Redirect>\n      )}\n    </>\n  );\n};\n\nexport default MyProfile;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\PrivateRoute\\PrivateRoute.js",["331"],"import React, { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        loggedInUser.email ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Login\\firebaseConfig.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\AssessmentQuestionSingle.js",["332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport \"./AssessmentQuestionSingle.css\";\nimport picture from \"../../../Image/ability .jpg\";\nimport { useRef } from \"react\";\nimport StopWatch from \"./StopWatch\";\n\n/*------------------------------------------------------------------ assessment questions single */\n\nconst AssessmentQuestionSingle = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [questionsBank, setQuestionsBank] = useState([]);\n  const [giverAnswer, setGivenAnswer] = useState([]);\n  const [questionHeader, setQuestionHeader] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const allAnswer = [];\n\n  //   start point and end point\n  const [statPoint, setStatPoint] = useState(0);\n  const [endPoint, setEndPoint] = useState(8);\n  const [count, setCount] = useState(0);\n  const [refereshed, setRefreshed] = useState(false);\n\n  const handlePush = (answer) => {\n    allAnswer.push(answer);\n    if (refereshed) {\n      setRefreshed(false);\n    }\n  };\n\n  const handleBoth = () => {\n    if ([...new Set(allAnswer.map((e) => e.questionId))].length === 8) {\n      const newStartPoint = statPoint + 8;\n      setStatPoint(newStartPoint);\n      const newEndPoint = endPoint + 8;\n      setEndPoint(newEndPoint);\n      const newCount = count + 1;\n      // if (count < questionsBank.length - 2) {\n      //\n      // }\n      setCount(newCount);\n      setRefreshed(true);\n      let ele = document.getElementsByName(\"radio\");\n      for (let i = 0; i < ele.length; i++) ele[i].checked = false;\n\n      handleSubmitAnswer();\n    }\n  };\n\n  const handleSubmitAnswer = () => {\n    if (allAnswer.length === 16) {\n      const unique = allAnswer.filter(\n        (answer) => answer.selectedAnswer !== undefined\n      );\n\n      fetch(\"https://damp-woodland-24997.herokuapp.com/addAnswer\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          email: loggedInUser.email,\n          answer: unique,\n          header: id,\n          date: newDate,\n          name: loggedInUser.name,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          alert(\"your answer added successfully\");\n        });\n    } else {\n      alert(\"please complete all the question\");\n    }\n  };\n\n  const handleSubmit = () => {\n    if (allAnswer.length === 16) {\n      const unique = allAnswer.filter(\n        (answer) => answer.selectedAnswer !== undefined\n      );\n\n      fetch(\"https://damp-woodland-24997.herokuapp.com/addAnswer\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          email: loggedInUser.email,\n          answer: unique,\n          header: id,\n          date: newDate,\n          name: loggedInUser.name,\n        }),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          alert(\"your answer added successfully\");\n          history.push(`/resultOrPdf/${id}`);\n        });\n    } else {\n      alert(\"please complete all the question\");\n    }\n  };\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/questionByHeader`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ header: id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (count < data.length) {\n          setQuestionsBank(data[count].questions);\n          setRefreshed(false);\n          setQuestionHeader(data[count].questions[count].measuringIndex);\n          setDetails(data[count].questions[count].description);\n        }\n        if (count === data.length - 1) {\n          setEndPoint(101);\n        }\n      });\n  }, [count]);\n\n  const dateObj = new Date();\n  const month = dateObj.getUTCMonth() + 1; //months from 1-12\n  const day = dateObj.getUTCDate();\n  const year = dateObj.getUTCFullYear();\n  const newDate = year + \"/\" + month + \"/\" + day;\n\n  return (\n    <div className=\"container\">\n      <>\n        <div className=\"\">\n          <div className=\"row taskBar\">\n            <div className=\"col-md-6 col-0\"></div>\n            <div className=\"col-md-1 col-2 mr-2\">ALWAYS</div>\n            <div className=\"col-md-1 col-2 mr-2\">MOSTLY</div>\n            <div className=\"col-md-1 ml-md-4 mr-l col-2\">OFTEN</div>\n            <div className=\"col-md-1 ml-md-1 mr-0 col-2\">RARELY</div>\n            <div className=\"col-md-1 col-2\">NEVER</div>\n          </div>\n          <div>\n            <div className=\"row\">\n              {questionsBank.map((question /*.slice(statPoint, endPoint)*/) => (\n                <Single\n                  handlePush={handlePush}\n                  refereshed={refereshed}\n                  question={question}\n                ></Single>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div>\n          <div className=\"text-center\">\n            {endPoint < 100 ? (\n              <button\n                onClick={handleBoth}\n                className=\"letsGoBtn m-5 pl-5 pr-5 pt-2 pb-2\"\n                type=\"submit\"\n              >\n                Next\n              </button>\n            ) : (\n              <button\n                onClick={handleSubmit}\n                className=\"btn btn-success m-5 pl-5 pr-5 pt-2 pb-2\"\n              >\n                Submit\n              </button>\n            )}\n          </div>\n        </div>\n      </>\n    </div>\n  );\n};\n\n/*------------------------------------------------------------------ single ----*/\n\nconst Single = ({ question, handlePush, mySubmitFunction, refereshed }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [count, setCount] = useState(0);\n  const [answer, setAnswer] = useState({});\n  const [selectionButton, setSelectionButton] = useState(0);\n\n  useEffect(() => {\n    if (refereshed && selectionButton > 0) {\n      setSelectionButton(0);\n      setCount(0);\n    }\n  });\n\n  const handleAnswers = (e) => {\n    if (count < 3) {\n      const newAnswer = { ...loggedInUser, ...question };\n\n      newAnswer[\"selectedAnswer\"] = e.target.value;\n      handlePush(newAnswer);\n      handleSelectionButton();\n      icreaseCount();\n    } else {\n      console.log(\"Already selected\");\n    }\n  };\n\n  const icreaseCount = () => {\n    setCount(count + 2);\n  };\n\n  const handleSelectionButton = () => {\n    setSelectionButton(selectionButton + 1);\n  };\n\n  return (\n    <div className=\"col-12 p-2 questionRow\">\n      <div className=\"row\">\n        <div className=\"col-md-6 pt-2 d-flex align-items-center\">\n          <div className=\"ml-3 mr-3\" style={{ fontWeight: \"bold\" }}>\n            {question.questionId}\n          </div>\n          <div>{question.question}</div>\n        </div>\n        <div className=\"col-md-6 \">\n          <form className=\"d-flex\">\n            <label onClick={handleAnswers}>\n              <input type=\"radio\" name=\"radio\" value=\"ALWAYS\" />\n              <span>ALWAYS</span>\n            </label>\n            <label onClick={handleAnswers}>\n              <input type=\"radio\" name=\"radio\" value=\"MOSTLY\" />\n              <span>MOSTLY</span>\n            </label>\n            <label onClick={handleAnswers}>\n              <input type=\"radio\" name=\"radio\" value=\"OFTEN\" />\n              <span>OFTEN</span>\n            </label>\n            <label onClick={handleAnswers}>\n              <input type=\"radio\" name=\"radio\" value=\"RARELY\" />\n              <span>RARELY</span>\n            </label>\n            <label onClick={handleAnswers}>\n              <input type=\"radio\" name=\"radio\" value=\"NEVER\" />\n              <span>NEVER </span>\n            </label>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssessmentQuestionSingle;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\StopWatch.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\ResultPage\\SingleResultPage.js",["346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport img from \"../../../src/Image/Picture1.png\";\nimport \"./SingleResultPage.css\";\n\nconst SingleResultPage = ({ singleAnswer }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(\"/resonance\");\n  };\n\n  return (\n    <section>\n      <PerSingle singleAnswer={singleAnswer}></PerSingle>\n    </section>\n  );\n};\n\nconst PerSingle = ({ singleAnswer }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const { answer } = singleAnswer;\n\n  return (\n    <>\n      <div className=\"container mt-5 border-dark \">\n        <div className=\"html2pdf__page-break\"></div>\n        <div className=\"row border-dark\">\n          <div className=\"col-md-12 bg-light border border-dark \">\n            <span className=\"text-uppercase\">\n              <b>{singleAnswer.answer[0].measuringIndex}</b>\n            </span>\n            - {singleAnswer.answer[0].description}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"text-center text-uppercase col border border-dark \">\n            Rating\n          </div>\n        </div>\n        <div className=\"row text-center text-uppercase\">\n          <div className=\"col border border-dark \">Not Demonstrated</div>\n          <div className=\"col border border-dark \">Early Awareness</div>\n          <div className=\"col border border-dark \">Selective Application</div>\n          <div className=\"col border border-dark \">Well-Manifested</div>\n          <div className=\"col border border-dark \">Clear strength</div>\n        </div>\n        <div className=\"row text-center\">\n          <div className=\"col border border-dark\">(ND)</div>\n          <div className=\"col border border-dark\">(EA)</div>\n          <div className=\"col border border-dark\">(SA)</div>\n          <div className=\"col border border-dark\">(WM)</div>\n          <div className=\"col border border-dark\">(CS)</div>\n        </div>\n        <div className=\"row text-center\">\n          <div className=\"col border border-dark\"></div>\n          <div className=\"col border border-dark\"></div>\n          <div className=\"col border border-dark\"></div>\n          <div\n            className=\"col border border-dark \"\n            style={{\n              width: \"100px\",\n              height: \"20px\",\n            }}\n          ></div>\n          <div className=\"col border border-dark\"></div>\n        </div>\n        <div className=\"row bg-dark \">\n          <div className=\"col text-center text-uppercase text-light\">\n            Behavioural Inputs\n          </div>\n        </div>\n        <div className=\"row border border-dark \">\n          <div className=\"col-md-6 border border-dark \"></div>\n          <div className=\"row col-md-6 text-center \">\n            <div className=\"col border border-dark \">ND</div>\n            <div className=\"col border border-dark \">EA</div>\n            <div className=\"col border border-dark \">SA</div>\n            <div className=\"col border border-dark \">WM</div>\n            <div className=\"col \">CS</div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          {answer.map((answer) => (\n            <EveryQuestionWithAnswer answer={answer}></EveryQuestionWithAnswer>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst EveryQuestionWithAnswer = ({ answer }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const { question, selectedAnswer } = answer;\n\n  const style5 = {\n    backgroundColor: \"#00B0F0\",\n  };\n\n  const style4 = {\n    backgroundColor: \"#92D050\",\n  };\n\n  const style3 = {\n    backgroundColor: \"#FFC000\",\n  };\n\n  const style2 = {\n    backgroundColor: \"#ED7D31\",\n  };\n\n  const style1 = {\n    backgroundColor: \"#FF0000\",\n  };\n\n  return (\n    <>\n      <div className=\"col-md-6 border border-dark \">{question} </div>\n\n      <div className=\"col-md-6 border border-dark \">\n        <form\n          className=\"row text-center p-1 d-flex justify-content-between\"\n          action=\"\"\n        >\n          <div className=\"col-2\">\n            {selectedAnswer === \"NEVER\" ? (\n              <div className=\"roundBox bg1 notDemonstrated\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox notDemonstrated\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2\">\n            {selectedAnswer === \"RARELY\" ? (\n              <div className=\"roundBox bg2 earlyAwareness\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox earlyAwareness\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2\">\n            {selectedAnswer === \"OFTEN\" ? (\n              <div className=\"roundBox bg3 selectiveApplication\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox selectiveApplication\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2 wellManifested\">\n            {selectedAnswer === \"MOSTLY\" ? (\n              <div className=\"roundBox bg4\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2 clearStrength\">\n            {selectedAnswer === \"ALWAYS\" ? (\n              <div className=\"roundBox bg5\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox\">\n                <p></p>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default SingleResultPage;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\SingleUserSelectedAnswer.js",["360","361","362","363","364","365","366","367"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../../../App\";\nimport SingleResultPageUser from \"./SingleResultPageUser\";\n\nconst SingleUserSelectedAnswer = ({ id }) => {\n  const res = id.split(\"+\");\n  const [header, email] = res;\n  console.log(header, email);\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [count, setCount] = useState(0);\n  const [startPoint, setStatPoint] = useState(0);\n  const [endPoint, setEndPoint] = useState(1);\n\n  const handleBothCount = () => {\n    console.log(startPoint, endPoint);\n  };\n\n  const [allAnswer, setAllAnswer] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newAllAnswer = data.filter((answer) => answer.header === header);\n        setAllAnswer(newAllAnswer);\n      });\n  }, []);\n\n  return (\n    <>\n      <div>\n        {allAnswer.map((answer) => (\n          <SingleResultPageUser singleAnswer={answer}></SingleResultPageUser>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SingleUserSelectedAnswer;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\SingleUserResult.js",["368","369","370","371","372","373","374","375","376"],"import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { UserContext } from \"../../../../App\";\n\nconst SingleUserResult = ({ id }) => {\n  const res = id.split(\"+\");\n  const [header, email] = res;\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [totalScore, setTotalScore] = useState(0);\n  const [allAnswer, setAllAnswer] = useState([]);\n  const allSelectedAnswer = [];\n  const [PercentageScore, setPercentageScore] = useState(0);\n\n  const makeMapToFindScore = allAnswer.map((singleAnswer) => {\n    const { answer } = singleAnswer;\n\n    for (let i = 0; i < answer.length; i++) {\n      const element = answer[i];\n      allSelectedAnswer.push(element.selectedAnswer);\n    }\n  });\n\n  const alwaysCount = allSelectedAnswer.filter((answer) => answer === \"ALWAYS\");\n  const mostlyCount = allSelectedAnswer.filter((answer) => answer === \"MOSTLY\");\n  const oftenCount = allSelectedAnswer.filter((answer) => answer === \"OFTEN\");\n  const rarelyCount = allSelectedAnswer.filter((answer) => answer === \"RARELY\");\n  const neverCount = allSelectedAnswer.filter((answer) => answer === \"NEVER\");\n\n  const alwaysCountTotals = alwaysCount.length * 5;\n  const mostlyCountTotals = mostlyCount.length * 4;\n  const oftenCountTotals = oftenCount.length * 3;\n  const rarelyCountTotals = rarelyCount.length * 2;\n  const neverCountTotals = neverCount.length * 1;\n\n  const newTotalScore =\n    alwaysCountTotals +\n    mostlyCountTotals +\n    oftenCountTotals +\n    rarelyCountTotals +\n    neverCountTotals;\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newAllAnswer = data.filter((answer) => answer.header === header);\n        setAllAnswer(newAllAnswer);\n      });\n  }, []);\n\n  const style1 = {\n    backgroundColor: \"green\",\n    width: `${newTotalScore / 2}%`,\n    textAlign: \"right\",\n  };\n  const style2 = {\n    backgroundColor: \"green\",\n    width: `${newTotalScore / 2}%`,\n    textAlign: \"right\",\n  };\n\n  return (\n    <section>\n      <div className=\"container\">\n        <h3>Overall Empathy index – Interpretation of Scores</h3>\n        <div>\n          <div className=\"Index my-5\">\n            <div className=\"row \">\n              <div className=\"col-md-12 textBg text-center boxForEmpathyIndex\">\n                <h3>OVERALL EMPATHY INDEX</h3>\n              </div>\n            </div>\n            <div className=\"row d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Absolute Score Scale</p>\n              </div>\n              <div className=\"col-md-9\">\n                <div>\n                  <div className=\"row ml-1\">\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      0\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      40\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      80\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      120\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      160\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      200\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row boxForEmpathy d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Absolute Score Scale</p>\n              </div>\n\n              <div className=\"col-md-9\">\n                <div className=\"row ml-1\">\n                  <div style={style1}>\n                    <h5 className=\"text-white\"> {newTotalScore} </h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row boxForEmpathy d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Percentage Score Scale</p>\n              </div>\n              <div className=\"col-md-9\">\n                <div>\n                  <div className=\"row ml-1\">\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      0\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      20\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      40\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      60\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      80\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      100\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row boxForEmpathy d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Percentage Earned Score</p>\n              </div>\n              <div className=\"col-md-9\">\n                <div>\n                  <div className=\"row ml-1\">\n                    <div style={style2}>\n                      <h5 className=\" text-white\">{newTotalScore / 2} %</h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <p>\n            Please read following guidelines to make sense of your scores and\n            devise your measures to enhance your empathy index.{\" \"}\n          </p>\n          <p style={{ fontWeight: \"bold\" }}>\n            He got a score of{\" \"}\n            <span className=\"text-info\">\n              {newTotalScore}/ {allSelectedAnswer.length * 5}\n            </span>{\" \"}\n            as a combined total of EMPATHIC INDEX.\n          </p>\n          <p>Let us understand what this score means for</p>\n          <div className=\"my-5\">\n            <p>\n              <span className=\"text-info \" style={{ fontWeight: \"bold\" }}>\n                180-200 (90% to 100%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 5 =</span> You\n              understand, embody, and exemplify empathy, exceptionally well. You\n              have the wherewithal to ‘role-model’ empathy in your context and\n              be a champion. Keep up the good work but be wary of the empathy\n              fatigue and its potential overuse, by actively asking this\n              question, “Is there something getting overlooked or ignored in the\n              garb of empathy”?\n            </p>\n          </div>\n          <div className=\"my-5\">\n            <p>\n              <span className=\"text-info\" style={{ fontWeight: \"bold\" }}>\n                140-179 (70% to 89%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 4 =</span> You often\n              understand and demonstrate empathic concern at a cognitive as well\n              as emotional level but will do well to enhance your effectiveness\n              by identifying opportunities for real application.{\" \"}\n            </p>\n          </div>\n          <div className=\"my-5\">\n            <p>\n              {\" \"}\n              <span className=\"text-info\" style={{ fontWeight: \"bold\" }}>\n                100-139 (50% to 69%){\" \"}\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}> : Level 3 =</span> You show\n              selective evidence of understanding and practising empathy, but\n              your record is sporadic, and consistency is missing. Having\n              understood the power of empathy, you will do well to increase your\n              attempts of applying empathy and creating a positive lasting\n              residue.{\" \"}\n            </p>\n          </div>\n          <div className=\"my-5\">\n            <p>\n              <span className=\"text-info\" style={{ fontWeight: \"bold\" }}>\n                60-99 (30% to 49%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 2 =</span> There is\n              little evidence to suggest that your tryst with empathy has begun,\n              yet. It may be a good idea to explore, if there are any\n              contradictions in your mind as regards the understanding as well\n              as the potential of empathy, as an instrument of transformation\n              and impact.\n            </p>\n          </div>\n          <div className=\"my-5\">\n            <p>\n              <span className=\"text-info\" style={{ fontWeight: \"bold\" }}>\n                01-59 (0% to 30%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 1 =</span> Your\n              scores suggest a huge gap in understanding empathy and a missing\n              opportunity in appreciating its impact on the people that you lead\n              or may lead in future, in a given context. The sooner you begin\n              this journey, the better you will get at the game of leading.{\" \"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleUserResult;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AllAssessments\\AllAssessments.js",["377","378","379","380","381"],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport { assessmentsAll } from \"../../../FakeData/AllAssessments\";\nimport \"./AllAssessments.css\";\nimport SingleAssessment from \"./SingleAssessment\";\n\nconst AllAssessments = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [allAssessmentQuestions, setAllAssessmentQuestions] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/userDetails`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setLoggedInUser(data[0]);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://damp-woodland-24997.herokuapp.com/question\")\n      .then((res) => res.json())\n      .then((data) => {\n        setAllAssessmentQuestions(data);\n      });\n  }, []);\n\n  // /*all header are push into a array */\n\n  const allHeader = [];\n  const allKyes = allAssessmentQuestions.map((question) => {\n    allHeader.push(question.header);\n  });\n\n  const useFilter = (arr) => {\n    return arr.filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    });\n  };\n\n  const unique = useFilter(allHeader);\n  let history = useHistory();\n  let location = useLocation();\n\n  return (\n    <>\n      {loggedInUser.companyName &&\n      loggedInUser.name &&\n      loggedInUser.position &&\n      loggedInUser.Industry &&\n      loggedInUser.gender &&\n      loggedInUser.leaders ? (\n        <div className=\"allAssessments container\">\n          <div className=\"mt-3 text-center\">\n            <h3 className=\"hello\">Welcome to COSM Assessment Portal</h3>\n          </div>\n          {allAssessmentQuestions.length > 0 ? (\n            <div className=\"row d-flex justify-content-between \">\n              {unique.map((assessment) => (\n                <SingleAssessment\n                  key={assessment.id}\n                  assessment={assessment}\n                ></SingleAssessment>\n              ))}\n            </div>\n          ) : (\n            <div className=\"row d-flex justify-content-between \">\n              <p> loading...</p>\n            </div>\n          )}\n        </div>\n      ) : (\n        <Redirect\n          onClick={() => {\n            alert(\"Please complete your profile\");\n          }}\n          to={{\n            pathname: \"/myProfile\",\n            state: { from: location },\n          }}\n        ></Redirect>\n      )}\n    </>\n  );\n};\n\nexport default AllAssessments;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\ClientNavSection\\ClientNavSection.js",["382","383"],"import React, { useContext } from \"react\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport \"./ClientNavSection.css\";\nimport logo from \"../../../Image/logo-wide.png\";\n\nconst ClientNavSection = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const history = useHistory();\n\n  const handleLogOut = () => {\n    const newUser = {\n      name: \"\",\n      email: \"\",\n      photo: \"\",\n      totalScore: 0,\n      selectedAnswerArray: [],\n    };\n    setLoggedInUser(newUser);\n    history.push(\"/login\");\n  };\n  return (\n    <div className=\"navContainer\">\n      <nav class=\"navbar container navbar-expand-lg \">\n        <Link to=\"/profile\">\n          <img className=\"image-fluid logo\" src={logo} alt=\"\" />\n        </Link>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <img src=\"https://img.icons8.com/doodle/48/000000/menu.png\" />\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item pl-3 pr-3\">\n              <NavLink exact className=\"nav-link h5\" to=\"/profile\">\n                All Assessments\n              </NavLink>\n            </li>\n\n            <li class=\"nav-item pl-3 pr-3\">\n              <NavLink exact className=\"nav-link h5\" to=\"/completeAssessment\">\n                Completed\n              </NavLink>\n            </li>\n\n            <li class=\"nav-item pl-3 pr-3\">\n              <NavLink exact className=\"nav-link h5\" to=\"/myProfile\">\n                My Profile\n              </NavLink>\n            </li>\n\n            <li class=\"nav-item pl-3 pr-3\">\n              <div onClick={handleLogOut} className=\"nav-link h5\" to=\"/\">\n                Log Out\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default ClientNavSection;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AssessmentById\\SingleQuestion\\SingleQuestion.js",["384","385","386"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../../../../App\";\nimport \"./SingleQuestion.css\";\nimport picture from \"../../../../Image/ability .jpg\";\n\nconst SingleQuestion = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const { id } = useParams();\n  const [count, setCount] = useState(0);\n\n  /* fatch the data and put in store */\n  const [questionsBank, setQuestionsBank] = useState([]);\n  const [questionHeader, setQuestionHeader] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/questionByHeader`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ header: id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (count < data.length) {\n          setQuestionHeader(data[count].questions[count].measuringIndex);\n          setDetails(data[count].questions[count].description);\n          setQuestionsBank(data[count].questions);\n        }\n      });\n  }, [count]);\n  const handleCount = () => {\n    const newCount = count + 1;\n    setCount(newCount);\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"HeaderSection\">\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <h2>{questionHeader}</h2>\n            </div>\n            <div className=\"col-md-4\">\n              <img className=\"w-50 image-fluid\" src={picture} alt=\"\" />\n            </div>\n          </div>\n          <div>\n            <p>{details}</p>\n          </div>\n        </div>\n        <div className=\"questionSection\">\n          <div className=\"questionHeader\">\n            <div className=\"row\">\n              <div className=\"col-md-6\"></div>\n              <div className=\"col-md-1\">ALWAYS</div>\n              <div\n                style={{ position: \"relative \", right: \"10px\" }}\n                className=\"col-md-1 \"\n              >\n                MOSTLY\n              </div>\n              <div\n                className=\"col-md-1\"\n                style={{ position: \"relative \", right: \"10px\" }}\n              >\n                OFTEN\n              </div>\n              <div\n                className=\"col-md-1\"\n                style={{ position: \"relative \", right: \"20px\" }}\n              >\n                RARELY\n              </div>\n              <div\n                style={{ position: \"relative \", right: \"20px\" }}\n                className=\"col-md-1\"\n              >\n                NEVER\n              </div>\n            </div>\n            <div></div>\n          </div>\n\n          <div className=\"questionDetails\">\n            {questionsBank.map((question /*.slice(statPoint, endPoint)*/) => (\n              <Single question={question}></Single>\n            ))}\n          </div>\n          <button\n            onClick={handleCount}\n            className=\"letsGoBtn m-5 pl-5 pr-5 pt-2 pb-2\"\n            type=\"submit\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Single = ({ question }) => {\n  return (\n    <div className=\"row questionRow\">\n      <div className=\"col-md-6\">\n        <p>{question.question}</p>\n      </div>\n      <div className=\"col-md-6 \">\n        <form className=\"d-flex\" action=\"\">\n          <div className=\"col-md-2\">\n            <input type=\"radio\" name=\"radio\" value=\"ALWAYS\" />\n          </div>\n          <div className=\"col-md-2\">\n            <input type=\"radio\" name=\"radio\" value=\"ALWAYS\" />\n          </div>\n          <div className=\"col-md-2\">\n            <input type=\"radio\" name=\"radio\" value=\"ALWAYS\" />\n          </div>\n          <div className=\"col-md-2\">\n            <input type=\"radio\" name=\"radio\" value=\"ALWAYS\" />\n          </div>\n          <div className=\"col-md-2\">\n            <input type=\"radio\" name=\"radio\" value=\"ALWAYS\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleQuestion;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\HeaderSlider\\HeaderSlider.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\OurEdge\\OurEdge.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\NavBarSection\\NavBarSection.js",["387","388","389"],"import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport logo from \"../../../Image/logo.png\";\nimport \"./NavBarSection.css\";\n\nconst NavBarSection = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  return (\n    <div className=\"fixed-top navContainer\">\n      <div className=\"container \">\n        <nav class=\"navbar navbar-expand-lg \">\n          <Link to=\"/\">\n            <img className=\"image-fluid logo\" src={logo} alt=\"\" />\n          </Link>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <img src=\"https://img.icons8.com/doodle/48/000000/menu.png\" />\n          </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ml-auto\">\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link\" to=\"/\">\n                  Home\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link\" to=\"/about\">\n                  About Us\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link\" to=\"/offerings\">\n                  Offerings\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link\" to=\"/leadership\">\n                  Thought Leadership\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link\" to=\"/gallery\">\n                  Gallery\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link\" to=\"/calendar\">\n                  Event Calendar\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink className=\"nav-link\" to=\"/login\">\n                  Login\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBarSection;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\OurOfferings\\OurOfferings.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminNavBar\\AdminNavBar.js",["390","391"],"import React from \"react\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\n\nimport \"./AdminNavBar.css\";\nimport logo from \"../../../../Image/logo-wide.png\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../../../App\";\n\nconst AdminNavBar = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n\n  const handleLogOut = () => {\n    const newUser = {\n      name: \"\",\n      email: \"\",\n      photo: \"\",\n      totalScore: 0,\n      selectedAnswerArray: [],\n    };\n    setLoggedInUser(newUser);\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"navContainer\">\n      <div className=\"container \">\n        <nav class=\"navbar navbar-expand-lg \">\n          <Link to=\"/admin\">\n            <img className=\"image-fluid logo\" src={logo} alt=\"\" />\n          </Link>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <img src=\"https://img.icons8.com/doodle/48/000000/menu.png\" />\n          </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ml-auto\">\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link h5\" to=\"/admin\">\n                  User Data\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link h5\" to=\"/createNew\">\n                  Create New\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <NavLink exact className=\"nav-link h5\" to=\"/adminProfile\">\n                  My Profile\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item pl-3 pr-3\">\n                <div onClick={handleLogOut} className=\"nav-link h5\" to=\"/\">\n                  Log Out\n                </div>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminNavBar;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\HelperComponent\\PDFDownloader.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\UserData\\UserData.js",["392","393","394","395","396","397","398","399","400"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../../../App\";\nimport pdf from \"../../../../Image/Md Abu Sufian resume.pdf\";\nimport \"./UserData.css\";\n\nconst UserData = ({ uniqueEmail }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [allAnswer, setAllAnswer] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: uniqueEmail.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAllAnswer(data);\n      });\n  }, []);\n\n  const allHeader = [];\n  const allKyes = allAnswer.map((question) => {\n    allHeader.push(question.header);\n  });\n\n  const useFilter = (arr) => {\n    return arr.filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    });\n  };\n\n  const unique = useFilter(allHeader);\n\n  const allUniqueAnswer = [];\n\n  for (let i = 0; i < unique.length; i++) {\n    const element = unique[i];\n    const uniqueAnswer = allAnswer.find((answer) => {\n      return answer.header === element;\n    });\n\n    allUniqueAnswer.push(uniqueAnswer);\n  }\n\n  /*---------------------------------------------Search option ------\n  const [word, setWord] = useState(\"\");\n\n  const handleSearchWord = (e) => {\n    const newWord = e.target.value;\n\n    setWord(newWord);\n  };\n\n  const search = () => {\n    console.log(word);\n    const searchWords = allUniqueAnswer.filter(\n      (answer) => answer.name === word\n    );\n    console.log(searchWords);\n    if (searchWords.length > 0) {\n      for (let i = 0; i < searchWords.length; i++) {\n        const element = searchWords[i];\n        console.log(element);\n        allUniqueAnswer.push(element);\n      }\n    }\n  };\n\n\n  ---------------------------------------------------------------------*/\n\n  return (\n    <div>\n      <div>\n        <div className=\"container\">\n          <div className=\"\">\n            {allAnswer.length > 0 ? (\n              <div className=\"row\">\n                {allUniqueAnswer.map((answer) => (\n                  <AllCompleteAssessment\n                    answer={answer}\n                    key={answer._id}\n                  ></AllCompleteAssessment>\n                ))}\n              </div>\n            ) : (\n              <div className=\"row\">\n                <p>loading...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AllCompleteAssessment = ({ answer }) => {\n  const [userDetails, setUserDetails] = useState({});\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/userDetails`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: answer.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          // setLoggedInUser(data[0]);\n          setUserDetails(data[0]);\n        }\n      });\n  }, []);\n\n  const history = useHistory();\n\n  const handleUserDetails = () => {\n    console.log(\"userDetails\");\n  };\n\n  return (\n    <div className=\"col-md-12 mb-2\">\n      <div className=\"completeAssessmentCard p-3\">\n        <div className=\"row d-flex align-items-center\">\n          <div\n            className=\"col-md-2 text-center pt-md-3 p-0\"\n            style={{ cursor: \"pointer\" }}\n          >\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to={`/userDetails/${answer.email}`}\n            >\n              <p>{answer.name} </p>\n            </Link>\n          </div>\n          <div className=\"col-md-4 pt-md-3 p-0 text-center\">\n            <p>{answer.email} </p>\n          </div>\n          <div className=\"col-md-2 pt-md-3 p-0 text-center\">\n            <p>{userDetails.companyName}</p>\n          </div>\n          <div className=\"col-md-1 pt-md-3 p-0 text-center\">\n            <p>{answer.date} </p>\n          </div>\n          <div className=\"col-md-2 text-center downloadPdf\">\n            <Link to={`/report/${answer.header}+${answer.email}`}>\n              <button className=\"ShowResultBtn\">Show Result</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserData;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\OneNumber\\OneNumber.js",["401","402","403","404","405"],"import React, { useState, useContext, useEffect } from \"react\";\nimport IntroductionPage from \"../../Client/IntroductionPage/IntroductionPage\";\nimport ResultPage from \"../../ResultPage/ResultPage\";\nimport BackGroundResearch from \"../BackGroundResearch/BackGroundResearch\";\nimport Dimensions from \"../Dimensions/Dimensions\";\nimport Introduction from \"../Introduction/Introduction\";\nimport Report from \"../Report/Report\";\nimport ReportFromDataBase from \"../ReportFromDataBase/ReportFromDataBase\";\nimport Scores from \"../Scores/Scores\";\nimport TopHeader from \"../TopHeader/TopHeader\";\nimport \"./OneNumber.css\";\nimport { UserContext } from \"../../../App\";\n\nconst OneNumber = ({ id }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n      });\n  }, []);\n  const url = `https://pdf.cosm.co.in/?id=${id}&email=${loggedInUser.email}`;\n  const urllocal = `http://127.0.0.1:5500/?id=${id}&email=${loggedInUser.email}`;\n\n  const downloadBoth = () => {\n    window.open(url, \"_blank \", \"width=900,height=600\", true);\n  };\n  return (\n    <>\n      <div className=\"text-center m-3\">\n        <button\n          className=\"letsGoBtn\"\n          onClick={() => {\n            downloadBoth();\n          }}\n        >\n          Download As Pdf\n        </button>\n      </div>\n      <div className=\"extra\">\n        <div id=\"result\">\n          <TopHeader></TopHeader>\n          <Introduction></Introduction>\n          <BackGroundResearch></BackGroundResearch>\n          <Dimensions></Dimensions>\n          <Report></Report>\n        </div>\n        <div id=\"result2\">\n          <Scores id={id}></Scores>\n          <ReportFromDataBase id={id}></ReportFromDataBase>\n          <ResultPage id={id}></ResultPage>\n          <div style={{ marginTop: \"100px\", color: \"#800000\" }}>\n            © 2021 Centre of Strategic Mindset, All Rights Reserved\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OneNumber;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\Admin\\AdminSeeUserResult\\SingleResultPageUser.js",["406","407","408","409","410"],"import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../../../App\";\n\nconst SingleResultPageUser = ({ singleAnswer }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(\"/resonance\");\n  };\n\n  return (\n    <section>\n      {/* <div>\n          <img src={img} width=\"100%\" alt=\"\" /> ----------------------------- we can img in top \n        </div> */}\n      <PerSingle singleAnswer={singleAnswer}></PerSingle>\n      <div\n        className=\"container border border-dark my-5\"\n        style={{ height: \"100px\" }}\n      >\n        <p>Key Reflections</p>\n      </div>\n      <div\n        className=\"container border border-dark my-5 \"\n        style={{ height: \"100px\" }}\n      >\n        <p>Key Actions</p>\n      </div>\n\n      {/* <footer className=\"mt-5 px-5 text-muted\">\n          © {new Date().getFullYear()} Centre of Strategic Mindset, All Rights --------footer remove \n          Reserved\n        </footer> */}\n    </section>\n  );\n};\n\nconst PerSingle = ({ singleAnswer }) => {\n  const { answer } = singleAnswer;\n  return (\n    <>\n      <div className=\"container mt-5 border border-dark \">\n        <div>\n          <div className=\"row border-dark\">\n            <div className=\"col-md-12 bg-light border border-dark \">\n              <span className=\"text-uppercase\">\n                <b>{singleAnswer.answer[0].measuringIndex}</b>\n              </span>\n              - {singleAnswer.answer[0].description}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"text-center text-uppercase col border border-dark \">\n              Rating\n            </div>\n          </div>\n          <div className=\"row text-center text-uppercase\">\n            <div className=\"col border border-dark \">Not Demonstrated</div>\n            <div className=\"col border border-dark \">Early Awareness</div>\n            <div className=\"col border border-dark \">Selective Application</div>\n            <div className=\"col border border-dark \">Well-Manifested</div>\n            <div className=\"col border border-dark \">Clear strength</div>\n          </div>\n          <div className=\"row text-center\">\n            <div className=\"col border border-dark\">(ND)</div>\n            <div className=\"col border border-dark\">(EA)</div>\n            <div className=\"col border border-dark\">(SA)</div>\n            <div className=\"col border border-dark\">(WM)</div>\n            <div className=\"col border border-dark\">(CS)</div>\n          </div>\n          <div className=\"row text-center\">\n            <div className=\"col border border-dark\"></div>\n            <div className=\"col border border-dark\"></div>\n            <div className=\"col border border-dark\"></div>\n            <div\n              className=\"col border border-dark \"\n              style={{\n                width: \"100px\",\n                height: \"20px\",\n              }}\n            ></div>\n            <div className=\"col border border-dark\"></div>\n          </div>\n          <div className=\"row bg-dark \">\n            <div className=\"col text-center text-uppercase text-light\">\n              Behavioural Inputs\n            </div>\n          </div>\n          <div className=\"row border border-dark \">\n            <div className=\"col-md-6 border border-dark \"></div>\n            <div className=\"row col-md-6 text-center \">\n              <div className=\"col border border-dark \">ND</div>\n              <div className=\"col border border-dark \">EA</div>\n              <div className=\"col border border-dark \">SA</div>\n              <div className=\"col border border-dark \">WM</div>\n              <div className=\"col \">CS</div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            {answer.map((answer) => (\n              <EveryQuestionWithAnswer\n                answer={answer}\n              ></EveryQuestionWithAnswer>\n            ))}\n          </div>\n\n          <div className=\"row bg-dark \">\n            <div style={{ width: \"100px\", height: \"20px\" }}></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst EveryQuestionWithAnswer = ({ answer }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const { question, selectedAnswer } = answer;\n\n  const style5 = {\n    backgroundColor: \"#00B0F0\",\n  };\n\n  const style4 = {\n    backgroundColor: \"#92D050\",\n  };\n\n  const style3 = {\n    backgroundColor: \"#FFC000\",\n  };\n\n  const style2 = {\n    backgroundColor: \"#ED7D31\",\n  };\n\n  const style1 = {\n    backgroundColor: \"#FF0000\",\n  };\n\n  return (\n    <>\n      <div className=\"col-md-6 border border-dark \">{question} </div>\n\n      <div className=\"col-md-6 border border-dark \">\n        <form\n          className=\"row text-center p-1 d-flex justify-content-between\"\n          action=\"\"\n        >\n          <div className=\"col-2\">\n            {selectedAnswer === \"NEVER\" ? (\n              <div style={style1} className=\"roundBox notDemonstrated\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox notDemonstrated\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2\">\n            {selectedAnswer === \"RARELY\" ? (\n              <div style={style2} className=\"roundBox earlyAwareness\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox earlyAwareness\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2\">\n            {selectedAnswer === \"OFTEN\" ? (\n              <div style={style3} className=\"roundBox selectiveApplication\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox selectiveApplication\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2 wellManifested\">\n            {selectedAnswer === \"MOSTLY\" ? (\n              <div style={style4} className=\"roundBox\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox\">\n                <p></p>\n              </div>\n            )}\n          </div>\n          <div className=\"col-2 clearStrength\">\n            {selectedAnswer === \"ALWAYS\" ? (\n              <div style={style5} className=\"roundBox\">\n                <p></p>\n              </div>\n            ) : (\n              <div className=\"roundBox\">\n                <p></p>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default SingleResultPageUser;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Client\\AllAssessments\\SingleAssessment.js",["411","412","413","414","415","416","417"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../../../App\";\nimport \"./SingleAssessment.css\";\n\nconst SingleAssessment = ({ assessment }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  let history = useHistory();\n  let location = useLocation();\n\n  const [allAnswer, setAllAnswer] = useState([]);\n  const [match, setMatch] = useState(false);\n  const [style, setStyle] = useState({\n    display: \"none\",\n  });\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length === 0) {\n          setStyle({\n            display: \"block\",\n          });\n        }\n        const name = data.map((answer) => answer.header === assessment);\n        for (let i = 0; i < name.length; i++) {\n          const element = name[i];\n          if (element === true) {\n            setMatch(true);\n          } else if (element === false) {\n            setStyle({\n              display: \"block\",\n            });\n          }\n        }\n      });\n  }, []);\n\n  return (\n    <div className=\"col-md-5 ml-3 mb-3 mt-3\">\n      <div className=\"bg card border-0 mb-1 shadow\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div>\n                <img\n                  className=\"card-img-top w-100 lazy-image\"\n                  src=\"https://i.ibb.co/gvdxS71/conference-3677032-1920.jpg\"\n                  alt=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"col-md-7 text-center\">\n              <h5 style={{ color: \"white\" }} className=\"card-title h2 p-2\">\n                {assessment}{\" \"}\n              </h5>\n              <div>\n                {match ? (\n                  <Link to={`/userReport/${assessment}`}>\n                    <button className=\"btn btn-rounded\">See result</button>\n                  </Link>\n                ) : (\n                  <Link style={style} to={`/assessment/${assessment}`}>\n                    <button className=\"btn btn-rounded \">\n                      Start Assessment\n                    </button>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleAssessment;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\Home\\HomePage\\OurOfferings\\SingleOffer.js",["418"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SingleOffer.css\";\n\nconst SingleOffer = ({ service }) => {\n  const { id, img, title, excerpt } = service;\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"serviceSection m-2\">\n        <div className=\"thumb\">\n          <div className=\"thumb-inner\">\n            <img className=\"img-fullWidth image-fluid w-100\" src={img} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"detailsSection p-3\">\n          <div className=\"symbol-icon\"></div>\n          <h4 className=\"title\">{title} </h4>\n          <div className=\"excerpt\">{excerpt} </div>\n          <div className=\"mt-4\">\n            <Link to=\"/\">\n              <button className=\"glow-on-hover\">Details</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleOffer;\n","E:\\Web\\KaizenGlobeClient-main\\src\\FakeData\\AllAssessments.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\FakeData\\AllServices.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Dimensions\\Dimensions.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Report\\Report.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Introduction\\Introduction.js",[],"E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\Scores\\Scores.js",["419","420","421","422","423","424","425","426","427"],"import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { UserContext } from \"../../../App\";\nimport img from \"../../../Image/table.jpg\";\nimport \"./Scores.css\";\n\nconst Scores = ({ id }) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [totalScore, setTotalScore] = useState(0);\n  const [allAnswer, setAllAnswer] = useState([]);\n  const allSelectedAnswer = [];\n  const [PercentageScore, setPercentageScore] = useState(0);\n\n  const makeMapToFindScore = allAnswer.map((singleAnswer) => {\n    const { answer } = singleAnswer;\n\n    for (let i = 0; i < answer.length; i++) {\n      const element = answer[i];\n      allSelectedAnswer.push(element.selectedAnswer);\n    }\n  });\n\n  const alwaysCount = allSelectedAnswer.filter((answer) => answer === \"ALWAYS\");\n  const mostlyCount = allSelectedAnswer.filter((answer) => answer === \"MOSTLY\");\n  const oftenCount = allSelectedAnswer.filter((answer) => answer === \"OFTEN\");\n  const rarelyCount = allSelectedAnswer.filter((answer) => answer === \"RARELY\");\n  const neverCount = allSelectedAnswer.filter((answer) => answer === \"NEVER\");\n\n  const alwaysCountTotals = alwaysCount.length * 5;\n  const mostlyCountTotals = mostlyCount.length * 4;\n  const oftenCountTotals = oftenCount.length * 3;\n  const rarelyCountTotals = rarelyCount.length * 2;\n  const neverCountTotals = neverCount.length * 1;\n\n  const newTotalScore =\n    alwaysCountTotals +\n    mostlyCountTotals +\n    oftenCountTotals +\n    rarelyCountTotals +\n    neverCountTotals;\n\n  function findOutPrecentScore(score) {\n    if (score > 179) {\n    } else if (score > 139 && score < 180) {\n      const newPercentScore = 70;\n      setPercentageScore(newPercentScore);\n    } else if (score > 99 && score < 140) {\n      const newPercentScore = 50;\n      setPercentageScore(newPercentScore);\n    } else if (score > 59 && score < 100) {\n      const newPercentScore = 30;\n      setPercentageScore(newPercentScore);\n    } else if (score > 0 && score < 60) {\n      const newPercentScore = 20;\n      setPercentageScore(newPercentScore);\n    }\n  }\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newAllAnswer = data.filter((answer) => answer.header === id);\n        setAllAnswer(newAllAnswer);\n      });\n  }, []);\n\n  const style1 = {\n    backgroundColor: \"#0cf50c\",\n    width: `${newTotalScore / 2}%`,\n    textAlign: \"right\",\n  };\n  const style2 = {\n    backgroundColor: \"#0cf50c\",\n    width: `${newTotalScore / 2}%`,\n    textAlign: \"right\",\n  };\n\n  return (\n    <section>\n      <div className=\"container pl-5 pr-5\">\n        <h3>Overall Empathy index – Interpretation of Scores</h3>\n        <div>\n          <div className=\"Index \">\n            <div className=\"row \">\n              <div className=\"col-md-12 textBg text-center boxForEmpathyIndex\">\n                <h3>OVERALL EMPATHY INDEX</h3>\n              </div>\n            </div>\n            <div className=\"row d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Absolute Score Scale</p>\n              </div>\n              <div className=\"col-md-9\">\n                <div>\n                  <div className=\"row ml-1\">\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      0\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      40\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      80\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      120\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      160\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      200\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row boxForEmpathy d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Absolute Score Scale</p>\n              </div>\n\n              <div className=\"col-md-9\">\n                <div className=\"row ml-1\">\n                  <div style={style1}>\n                    <h5 className=\"text-white\"> {newTotalScore} </h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row boxForEmpathy d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Percentage Score Scale</p>\n              </div>\n              <div className=\"col-md-9\">\n                <div>\n                  <div className=\"row ml-1\">\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      0\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      20\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      40\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      60\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      80\n                    </div>\n                    <div className=\"col-md-2 text-center boxForEmpathyIndex\">\n                      100\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row boxForEmpathy d-flex align-items-center\">\n              <div className=\"col-md-3 textBg boxForEmpathyIndex\">\n                <p>Percentage Earned Score</p>\n              </div>\n              <div className=\"col-md-9\">\n                <div>\n                  <div className=\"row ml-1\">\n                    <div style={style2}>\n                      <h5 className=\" text-white\">{newTotalScore / 2} %</h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{fontSize : '14px', marginTop : '20px'}}>\n          <p>\n            Please read following guidelines to make sense of your scores and\n            devise your measures to enhance your empathy index.{\" \"}\n          </p>\n          <p style={{ fontWeight: \"bold\" }}>\n            You have got a score of{\" \"}\n            <span className=\"text-info\">\n              {newTotalScore}/ {allSelectedAnswer.length * 5}\n            </span>{\" \"}\n            as a combined total of EMPATHIC INDEX.\n          </p>\n          <p>Let us understand what this score means for</p>\n          <div className=\"\">\n            <p>\n              <span className=\"text-info \" style={{ fontWeight: \"bold\", fontSize : '16px' }}>\n                180-200 (90% to 100%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 5 =</span> You\n              understand, embody, and exemplify empathy, exceptionally well. You\n              have the wherewithal to ‘role-model’ empathy in your context and\n              be a champion. Keep up the good work but be wary of the empathy\n              fatigue and its potential overuse, by actively asking this\n              question, “Is there something getting overlooked or ignored in the\n              garb of empathy”?\n            </p>\n          </div>\n          <div className=\"\">\n            <p>\n              <span className=\"text-info\" style={{ fontWeight: \"bold\", fontSize : '16px' }}>\n                140-179 (70% to 89%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 4 =</span> You often\n              understand and demonstrate empathic concern at a cognitive as well\n              as emotional level but will do well to enhance your effectiveness\n              by identifying opportunities for real application.{\" \"}\n            </p>\n          </div>\n          <div className=\"\">\n            <p>\n              {\" \"}\n              <span className=\"text-info\" style={{ fontWeight: \"bold\", fontSize : '16px' }}>\n                100-139 (50% to 69%){\" \"}\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}> : Level 3 =</span> You show\n              selective evidence of understanding and practising empathy, but\n              your record is sporadic, and consistency is missing. Having\n              understood the power of empathy, you will do well to increase your\n              attempts of applying empathy and creating a positive lasting\n              residue.{\" \"}\n            </p>\n          </div>\n          <div className=\"\">\n            <p>\n              <span className=\"text-info\" style={{ fontWeight: \"bold\", fontSize : '16px' }}>\n                60-99 (30% to 49%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 2 =</span> There is\n              little evidence to suggest that your tryst with empathy has begun,\n              yet. It may be a good idea to explore, if there are any\n              contradictions in your mind as regards the understanding as well\n              as the potential of empathy, as an instrument of transformation\n              and impact.\n            </p>\n          </div>\n          <div className=\"\">\n            <p>\n              <span className=\"text-info\" style={{ fontWeight: \"bold\", fontSize : '16px' }}>\n                01-59 (0% to 30%)\n              </span>{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>: Level 1 =</span> Your\n              scores suggest a huge gap in understanding empathy and a missing\n              opportunity in appreciating its impact on the people that you lead\n              or may lead in future, in a given context. The sooner you begin\n              this journey, the better you will get at the game of leading.{\" \"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Scores;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\ReportFromDataBase\\ReportFromDataBase.js",["428","429"],"import React, { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../../../App\";\nimport \"./ReportFromDataBase.css\";\n\nconst ReportFromDataBase = ({ id }) => {\n  const [allAnswer, setAllAnswer] = useState([]);\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n  const FinalResult = [];\n\n  for (let i = 0; i < allAnswer.length; i++) {\n    const element = allAnswer[i];\n    const { answer } = element;\n    let total = 0;\n\n    for (let j = 0; j < answer.length; j++) {\n      const { selectedAnswer } = answer[j];\n      if (selectedAnswer === \"ALWAYS\") {\n        total = total + 5;\n      } else if (selectedAnswer === \"MOSTLY\") {\n        total = total + 4;\n      } else if (selectedAnswer === \"OFTEN\") {\n        total = total + 3;\n      } else if (selectedAnswer === \"RARELY\") {\n        total = total + 2;\n      } else if (selectedAnswer === \"NEVER\") {\n        total = total + 1;\n      }\n    }\n    FinalResult.push(total);\n  }\n\n  const FinalResultDouble = FinalResult.map((data) => data * 2.5);\n\n  useEffect(() => {\n    fetch(`https://damp-woodland-24997.herokuapp.com/answerByEmail`, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newAllAnswer = data.filter((answer) => answer.header === id);\n        setAllAnswer(newAllAnswer);\n      });\n  }, []);\n\n  return (\n    <section>\n      <div className=\"container pl-5 pr-5\">\n        <h3 className=\"text-bold my-4 dimension\">\n          Dimension Wise Interpretation\n        </h3>\n\n        <div className=\"row text-center text-uppercase text-bold\">\n          <div className=\"col-md-3  border border-dark bg-light p-2\">\n            Empathy Dimensions\n          </div>\n          <div\n            className=\"col  border border-dark text-light\"\n            style={{ backgroundColor: \"#800000\" }}\n          >\n            Not <br /> Demonstrated\n          </div>\n          <div\n            className=\"col border border-dark text-light\"\n            style={{ backgroundColor: \"#800000\" }}\n          >\n            Early <br /> Awareness\n          </div>\n          <div\n            className=\"col border border-dark text-light \"\n            style={{ backgroundColor: \"#800000\" }}\n          >\n            Selective <br /> application\n          </div>\n          <div\n            className=\"col border border-dark text-light\"\n            style={{ backgroundColor: \"#800000\" }}\n          >\n            Well <br /> Manifested\n          </div>\n          <div\n            className=\"col  border border-dark text-light\"\n            style={{ backgroundColor: \"#800000\" }}\n          >\n            Clear <br /> strength\n          </div>\n        </div>\n        <div className=\"row border border-dark\">\n          <div style={{ height: \"20px\" }}></div>\n        </div>\n        <div className=\"row border border-dark\">\n          <div className=\"col-md-3 border border-dark\">\n            <span className=\"text-uppercase text-bold\">Relatability</span>\n          </div>\n          <div className=\"col-md-9 p-0 m-0 \">\n            <div\n              className=\" progress-bar \"\n              role=\"progressbar\"\n              style={{\n                width: `${FinalResultDouble[0]}%`,\n                height: \"100%\",\n                backgroundColor: \"#00B0F0\",\n                color: \"white\",\n                textAlign: \"right\",\n              }}\n              aria-valuenow=\"50\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <p>{`${FinalResultDouble[0]}%`}</p>{\" \"}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row border border-dark\">\n          <div style={{ height: \"20px\" }}></div>\n        </div>\n        <div className=\"row border border-dark\">\n          <div className=\"col-md-3 border border-dark\">\n            <span className=\"text-uppercase text-bold\">Resonance</span>\n          </div>\n          <div className=\"col-md-9 p-0 m-0 \">\n            <div\n              className=\" progress-bar \"\n              role=\"progressbar\"\n              style={{\n                width: `${FinalResultDouble[1]}%`,\n                height: \"100%\",\n                backgroundColor: \"#0cf50c\",\n                textAlign: \"right\",\n              }}\n              aria-valuenow=\"50\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <p>{`${FinalResultDouble[1]}%`}</p>{\" \"}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row border border-dark\">\n          <div style={{ height: \"20px\" }}></div>\n        </div>\n        <div className=\"row border border-dark\">\n          <div className=\"col-md-3 border border-dark\">\n            <span className=\"text-uppercase text-bold\">Reframing</span>\n          </div>\n          <div className=\"col-md-9 p-0 m-0 \">\n            <div\n              className=\" progress-bar \"\n              role=\"progressbar\"\n              style={{\n                width: `${FinalResultDouble[2]}%`,\n                height: \"100%\",\n                backgroundColor: \"#FFC000\",\n                textAlign: \"right\",\n              }}\n              aria-valuenow=\"50\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <p>{`${FinalResultDouble[2]}%`}</p>{\" \"}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row border border-dark\">\n          <div style={{ height: \"20px\" }}></div>\n        </div>\n        <div className=\"row border border-dark\">\n          <div className=\"col-md-3 border border-dark\">\n            <span className=\"text-uppercase text-bold\">Reorient</span>\n          </div>\n          <div className=\"col-md-9 p-0 m-0 \">\n            <div\n              className=\" progress-bar \"\n              role=\"progressbar\"\n              style={{\n                width: `${FinalResultDouble[3]}%`,\n                height: \"100%\",\n                backgroundColor: \"#ED7D31\",\n                textAlign: \"right\",\n              }}\n              aria-valuenow=\"50\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <p>{`${FinalResultDouble[3]}%`}</p>{\" \"}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row border border-dark\">\n          <div style={{ height: \"20px\" }}></div>\n        </div>\n        <div className=\"row border border-dark\">\n          <div className=\"col-md-3 border border-dark\">\n            <span className=\"text-uppercase text-bold\">Reimagination</span>\n          </div>\n          <div className=\"col-md-9 p-0 m-0 \">\n            <div\n              className=\" progress-bar \"\n              role=\"progressbar\"\n              style={{\n                width: `${FinalResultDouble[4]}%`,\n                height: \"100%\",\n                backgroundColor: \"#FF0000\",\n                textAlign: \"right\",\n              }}\n              aria-valuenow=\"50\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <p>{`${FinalResultDouble[4]}%`}</p>{\" \"}\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          <div\n            className=\"col border border-dark\"\n            style={{ height: \"20px\", backgroundColor: \"#FF0000\" }}\n          ></div>\n          <div\n            className=\"col border border-dark\"\n            style={{ height: \"20px\", backgroundColor: \"#ED7D31\" }}\n          ></div>\n          <div\n            className=\"col border border-dark\"\n            style={{ height: \"20px\", backgroundColor: \"#FFC000\" }}\n          ></div>\n          <div\n            className=\"col border border-dark\"\n            style={{ height: \"20px\", backgroundColor: \"#0cf50c\" }}\n          ></div>\n          <div\n            className=\"col border border-dark\"\n            style={{ height: \"20px\", backgroundColor: \"#00B0F0\" }}\n          ></div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col  border border-dark text-center text-bold\">\n            Not <br /> Demonstrated\n          </div>\n          <div className=\"col border border-dark text-center text-bold\">\n            Early <br /> Awareness\n          </div>\n          <div className=\"col border border-dark text-center text-bold \">\n            Selective <br /> application\n          </div>\n          <div className=\"col border border-dark text-center text-bold\">\n            Well <br /> Manifested\n          </div>\n          <div className=\"col  border border-dark text-center text-bold\">\n            Clear <br /> strength\n          </div>\n        </div>\n      </div>\n      {/* <footer className=\"mt-5 px-5\">\n        © {new Date().getFullYear()} Centre of Strategic Mindset, All Rights\n        Reserved\n      </footer> */}\n    </section>\n  );\n};\n\nexport default ReportFromDataBase;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\TopHeader\\TopHeader.js",["430"],"import React, { useContext } from \"react\";\nimport \"./TopHeader.css\";\nimport img from \"../../../Image/Picture1.png\";\nimport logo from \"../../../Image/Empathy 629942924-huge.jpg\";\nimport { UserContext } from \"../../../App\";\n\nconst TopHeader = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  return (\n    <>\n      <div className=\"container \">\n        <div>\n          <img src={img} width=\"100%\" alt=\"\" />\n          <div className=\"text-center\">\n            <h3>EMPATHY ASSESSMENT REPORT</h3>\n          </div>\n          <div className=\"text-center mb-3\">\n            <img src={logo} width=\"40%\" alt=\"\" />\n          </div>\n          <div className=\"text-center\">\n            <button className=\"nameBox\">{`${loggedInUser.firstName} ${loggedInUser.lastName}`}</button>\n          </div>\n          <div className=\"text-center mt-2\">\n            <h5>Empathy is the ultimate form of customer insight</h5>\n            <i>- Don Peppers -</i>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TopHeader;\n","E:\\Web\\KaizenGlobeClient-main\\src\\Components\\AllResultPage\\BackGroundResearch\\BackGroundResearch.js",[],{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":7,"column":3,"nodeType":"437","messageId":"438","endLine":7,"endColumn":7},{"ruleId":"435","severity":1,"message":"439","line":8,"column":3,"nodeType":"437","messageId":"438","endLine":8,"endColumn":13},{"ruleId":"435","severity":1,"message":"440","line":9,"column":3,"nodeType":"437","messageId":"438","endLine":9,"endColumn":14},{"ruleId":"435","severity":1,"message":"441","line":11,"column":8,"nodeType":"437","messageId":"438","endLine":11,"endColumn":16},{"ruleId":"435","severity":1,"message":"442","line":12,"column":17,"nodeType":"437","messageId":"438","endLine":12,"endColumn":34},{"ruleId":"435","severity":1,"message":"443","line":17,"column":8,"nodeType":"437","messageId":"438","endLine":17,"endColumn":21},{"ruleId":"435","severity":1,"message":"444","line":20,"column":8,"nodeType":"437","messageId":"438","endLine":20,"endColumn":27},{"ruleId":"435","severity":1,"message":"445","line":23,"column":8,"nodeType":"437","messageId":"438","endLine":23,"endColumn":18},{"ruleId":"435","severity":1,"message":"446","line":28,"column":8,"nodeType":"437","messageId":"438","endLine":28,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":54,"column":6,"nodeType":"449","endLine":54,"endColumn":8,"suggestions":"450"},{"ruleId":"435","severity":1,"message":"451","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":19},{"ruleId":"435","severity":1,"message":"452","line":3,"column":10,"nodeType":"437","messageId":"438","endLine":3,"endColumn":18},{"ruleId":"435","severity":1,"message":"453","line":9,"column":10,"nodeType":"437","messageId":"438","endLine":9,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":9,"column":24,"nodeType":"437","messageId":"438","endLine":9,"endColumn":39},{"ruleId":"435","severity":1,"message":"455","line":11,"column":7,"nodeType":"437","messageId":"438","endLine":11,"endColumn":14},{"ruleId":"435","severity":1,"message":"456","line":12,"column":7,"nodeType":"437","messageId":"438","endLine":12,"endColumn":15},{"ruleId":"435","severity":1,"message":"454","line":11,"column":24,"nodeType":"437","messageId":"438","endLine":11,"endColumn":39},{"ruleId":"435","severity":1,"message":"455","line":16,"column":9,"nodeType":"437","messageId":"438","endLine":16,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":17,"column":7,"nodeType":"437","messageId":"438","endLine":17,"endColumn":15},{"ruleId":"435","severity":1,"message":"457","line":37,"column":13,"nodeType":"437","messageId":"438","endLine":37,"endColumn":22},{"ruleId":"435","severity":1,"message":"458","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":11},{"ruleId":"435","severity":1,"message":"459","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":27},{"ruleId":"435","severity":1,"message":"460","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":16},{"ruleId":"435","severity":1,"message":"461","line":3,"column":10,"nodeType":"437","messageId":"438","endLine":3,"endColumn":18},{"ruleId":"435","severity":1,"message":"462","line":8,"column":8,"nodeType":"437","messageId":"438","endLine":8,"endColumn":22},{"ruleId":"435","severity":1,"message":"463","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":11},{"ruleId":"435","severity":1,"message":"452","line":7,"column":3,"nodeType":"437","messageId":"438","endLine":7,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":16,"column":24,"nodeType":"437","messageId":"438","endLine":16,"endColumn":39},{"ruleId":"435","severity":1,"message":"455","line":20,"column":7,"nodeType":"437","messageId":"438","endLine":20,"endColumn":14},{"ruleId":"435","severity":1,"message":"456","line":21,"column":7,"nodeType":"437","messageId":"438","endLine":21,"endColumn":15},{"ruleId":"435","severity":1,"message":"464","line":23,"column":10,"nodeType":"437","messageId":"438","endLine":23,"endColumn":19},{"ruleId":"435","severity":1,"message":"465","line":23,"column":21,"nodeType":"437","messageId":"438","endLine":23,"endColumn":33},{"ruleId":"447","severity":1,"message":"466","line":42,"column":6,"nodeType":"449","endLine":42,"endColumn":8,"suggestions":"467"},{"ruleId":"435","severity":1,"message":"452","line":2,"column":16,"nodeType":"437","messageId":"438","endLine":2,"endColumn":24},{"ruleId":"435","severity":1,"message":"458","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":9,"column":24,"nodeType":"437","messageId":"438","endLine":9,"endColumn":39},{"ruleId":"447","severity":1,"message":"468","line":33,"column":6,"nodeType":"449","endLine":33,"endColumn":8,"suggestions":"469"},{"ruleId":"435","severity":1,"message":"470","line":36,"column":9,"nodeType":"437","messageId":"438","endLine":36,"endColumn":16},{"ruleId":"471","severity":1,"message":"472","line":36,"column":44,"nodeType":"473","messageId":"474","endLine":36,"endColumn":46},{"ruleId":"435","severity":1,"message":"475","line":3,"column":8,"nodeType":"437","messageId":"438","endLine":3,"endColumn":16},{"ruleId":"435","severity":1,"message":"436","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":14},{"ruleId":"435","severity":1,"message":"458","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":11},{"ruleId":"435","severity":1,"message":"476","line":3,"column":8,"nodeType":"437","messageId":"438","endLine":3,"endColumn":19},{"ruleId":"435","severity":1,"message":"477","line":15,"column":25,"nodeType":"437","messageId":"438","endLine":15,"endColumn":41},{"ruleId":"435","severity":1,"message":"451","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":19},{"ruleId":"435","severity":1,"message":"453","line":9,"column":10,"nodeType":"437","messageId":"438","endLine":9,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":9,"column":24,"nodeType":"437","messageId":"438","endLine":9,"endColumn":39},{"ruleId":"435","severity":1,"message":"478","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":21},{"ruleId":"435","severity":1,"message":"456","line":35,"column":7,"nodeType":"437","messageId":"438","endLine":35,"endColumn":15},{"ruleId":"435","severity":1,"message":"457","line":57,"column":13,"nodeType":"437","messageId":"438","endLine":57,"endColumn":22},{"ruleId":"435","severity":1,"message":"479","line":58,"column":13,"nodeType":"437","messageId":"438","endLine":58,"endColumn":25},{"ruleId":"435","severity":1,"message":"457","line":88,"column":13,"nodeType":"437","messageId":"438","endLine":88,"endColumn":22},{"ruleId":"435","severity":1,"message":"453","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":8,"column":24,"nodeType":"437","messageId":"438","endLine":8,"endColumn":39},{"ruleId":"435","severity":1,"message":"480","line":10,"column":10,"nodeType":"437","messageId":"438","endLine":10,"endColumn":21},{"ruleId":"435","severity":1,"message":"481","line":10,"column":23,"nodeType":"437","messageId":"438","endLine":10,"endColumn":37},{"ruleId":"435","severity":1,"message":"470","line":21,"column":9,"nodeType":"437","messageId":"438","endLine":21,"endColumn":16},{"ruleId":"471","severity":1,"message":"472","line":21,"column":44,"nodeType":"473","messageId":"474","endLine":21,"endColumn":46},{"ruleId":"447","severity":1,"message":"482","line":39,"column":6,"nodeType":"449","endLine":39,"endColumn":8,"suggestions":"483"},{"ruleId":"435","severity":1,"message":"452","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":18},{"ruleId":"447","severity":1,"message":"484","line":24,"column":6,"nodeType":"449","endLine":24,"endColumn":8,"suggestions":"485"},{"ruleId":"435","severity":1,"message":"486","line":46,"column":9,"nodeType":"437","messageId":"438","endLine":46,"endColumn":13},{"ruleId":"435","severity":1,"message":"439","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":20},{"ruleId":"435","severity":1,"message":"463","line":3,"column":8,"nodeType":"437","messageId":"438","endLine":3,"endColumn":11},{"ruleId":"435","severity":1,"message":"487","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"454","line":10,"column":24,"nodeType":"437","messageId":"438","endLine":10,"endColumn":39},{"ruleId":"435","severity":1,"message":"488","line":11,"column":10,"nodeType":"437","messageId":"438","endLine":11,"endColumn":15},{"ruleId":"435","severity":1,"message":"489","line":11,"column":17,"nodeType":"437","messageId":"438","endLine":11,"endColumn":25},{"ruleId":"435","severity":1,"message":"490","line":12,"column":22,"nodeType":"437","messageId":"438","endLine":12,"endColumn":34},{"ruleId":"435","severity":1,"message":"491","line":13,"column":20,"nodeType":"437","messageId":"438","endLine":13,"endColumn":31},{"ruleId":"435","severity":1,"message":"492","line":15,"column":9,"nodeType":"437","messageId":"438","endLine":15,"endColumn":24},{"ruleId":"447","severity":1,"message":"466","line":32,"column":6,"nodeType":"449","endLine":32,"endColumn":8,"suggestions":"493"},{"ruleId":"435","severity":1,"message":"494","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"445","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":18},{"ruleId":"435","severity":1,"message":"453","line":13,"column":10,"nodeType":"437","messageId":"438","endLine":13,"endColumn":22},{"ruleId":"447","severity":1,"message":"495","line":40,"column":6,"nodeType":"449","endLine":40,"endColumn":20,"suggestions":"496"},{"ruleId":"435","severity":1,"message":"497","line":42,"column":9,"nodeType":"437","messageId":"438","endLine":42,"endColumn":15},{"ruleId":"435","severity":1,"message":"498","line":18,"column":9,"nodeType":"437","messageId":"438","endLine":18,"endColumn":21},{"ruleId":"435","severity":1,"message":"457","line":40,"column":13,"nodeType":"437","messageId":"438","endLine":40,"endColumn":22},{"ruleId":"435","severity":1,"message":"478","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":21},{"ruleId":"447","severity":1,"message":"484","line":28,"column":6,"nodeType":"449","endLine":28,"endColumn":8,"suggestions":"499"},{"ruleId":"435","severity":1,"message":"454","line":6,"column":24,"nodeType":"437","messageId":"438","endLine":6,"endColumn":39},{"ruleId":"435","severity":1,"message":"436","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":14},{"ruleId":"435","severity":1,"message":"500","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":15},{"ruleId":"435","severity":1,"message":"460","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":16},{"ruleId":"435","severity":1,"message":"501","line":9,"column":8,"nodeType":"437","messageId":"438","endLine":9,"endColumn":17},{"ruleId":"435","severity":1,"message":"454","line":14,"column":24,"nodeType":"437","messageId":"438","endLine":14,"endColumn":39},{"ruleId":"435","severity":1,"message":"502","line":16,"column":10,"nodeType":"437","messageId":"438","endLine":16,"endColumn":21},{"ruleId":"435","severity":1,"message":"503","line":16,"column":23,"nodeType":"437","messageId":"438","endLine":16,"endColumn":37},{"ruleId":"435","severity":1,"message":"504","line":17,"column":10,"nodeType":"437","messageId":"438","endLine":17,"endColumn":24},{"ruleId":"435","severity":1,"message":"505","line":18,"column":10,"nodeType":"437","messageId":"438","endLine":18,"endColumn":17},{"ruleId":"447","severity":1,"message":"482","line":127,"column":6,"nodeType":"449","endLine":127,"endColumn":13,"suggestions":"506"},{"ruleId":"435","severity":1,"message":"454","line":187,"column":24,"nodeType":"437","messageId":"438","endLine":187,"endColumn":39},{"ruleId":"435","severity":1,"message":"507","line":189,"column":10,"nodeType":"437","messageId":"438","endLine":189,"endColumn":16},{"ruleId":"435","severity":1,"message":"508","line":189,"column":18,"nodeType":"437","messageId":"438","endLine":189,"endColumn":27},{"ruleId":"447","severity":1,"message":"509","line":192,"column":3,"nodeType":"437","endLine":192,"endColumn":12,"suggestions":"510"},{"ruleId":"435","severity":1,"message":"461","line":1,"column":29,"nodeType":"437","messageId":"438","endLine":1,"endColumn":37},{"ruleId":"435","severity":1,"message":"463","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":11},{"ruleId":"435","severity":1,"message":"453","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":8,"column":24,"nodeType":"437","messageId":"438","endLine":8,"endColumn":39},{"ruleId":"435","severity":1,"message":"511","line":12,"column":9,"nodeType":"437","messageId":"438","endLine":12,"endColumn":20},{"ruleId":"435","severity":1,"message":"453","line":24,"column":10,"nodeType":"437","messageId":"438","endLine":24,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":24,"column":24,"nodeType":"437","messageId":"438","endLine":24,"endColumn":39},{"ruleId":"435","severity":1,"message":"453","line":99,"column":10,"nodeType":"437","messageId":"438","endLine":99,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":99,"column":24,"nodeType":"437","messageId":"438","endLine":99,"endColumn":39},{"ruleId":"435","severity":1,"message":"512","line":103,"column":9,"nodeType":"437","messageId":"438","endLine":103,"endColumn":15},{"ruleId":"435","severity":1,"message":"513","line":107,"column":9,"nodeType":"437","messageId":"438","endLine":107,"endColumn":15},{"ruleId":"435","severity":1,"message":"514","line":111,"column":9,"nodeType":"437","messageId":"438","endLine":111,"endColumn":15},{"ruleId":"435","severity":1,"message":"515","line":115,"column":9,"nodeType":"437","messageId":"438","endLine":115,"endColumn":15},{"ruleId":"435","severity":1,"message":"516","line":119,"column":9,"nodeType":"437","messageId":"438","endLine":119,"endColumn":15},{"ruleId":"435","severity":1,"message":"453","line":10,"column":10,"nodeType":"437","messageId":"438","endLine":10,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":10,"column":24,"nodeType":"437","messageId":"438","endLine":10,"endColumn":39},{"ruleId":"435","severity":1,"message":"488","line":11,"column":10,"nodeType":"437","messageId":"438","endLine":11,"endColumn":15},{"ruleId":"435","severity":1,"message":"489","line":11,"column":17,"nodeType":"437","messageId":"438","endLine":11,"endColumn":25},{"ruleId":"435","severity":1,"message":"490","line":12,"column":22,"nodeType":"437","messageId":"438","endLine":12,"endColumn":34},{"ruleId":"435","severity":1,"message":"491","line":13,"column":20,"nodeType":"437","messageId":"438","endLine":13,"endColumn":31},{"ruleId":"435","severity":1,"message":"492","line":15,"column":9,"nodeType":"437","messageId":"438","endLine":15,"endColumn":24},{"ruleId":"447","severity":1,"message":"517","line":32,"column":6,"nodeType":"449","endLine":32,"endColumn":8,"suggestions":"518"},{"ruleId":"435","severity":1,"message":"453","line":10,"column":10,"nodeType":"437","messageId":"438","endLine":10,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":10,"column":24,"nodeType":"437","messageId":"438","endLine":10,"endColumn":39},{"ruleId":"435","severity":1,"message":"519","line":11,"column":10,"nodeType":"437","messageId":"438","endLine":11,"endColumn":20},{"ruleId":"435","severity":1,"message":"520","line":11,"column":22,"nodeType":"437","messageId":"438","endLine":11,"endColumn":35},{"ruleId":"435","severity":1,"message":"521","line":14,"column":10,"nodeType":"437","messageId":"438","endLine":14,"endColumn":25},{"ruleId":"435","severity":1,"message":"522","line":14,"column":27,"nodeType":"437","messageId":"438","endLine":14,"endColumn":45},{"ruleId":"435","severity":1,"message":"523","line":16,"column":9,"nodeType":"437","messageId":"438","endLine":16,"endColumn":27},{"ruleId":"471","severity":1,"message":"472","line":16,"column":59,"nodeType":"473","messageId":"474","endLine":16,"endColumn":61},{"ruleId":"447","severity":1,"message":"517","line":55,"column":6,"nodeType":"449","endLine":55,"endColumn":8,"suggestions":"524"},{"ruleId":"435","severity":1,"message":"525","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"447","severity":1,"message":"526","line":26,"column":6,"nodeType":"449","endLine":26,"endColumn":8,"suggestions":"527"},{"ruleId":"435","severity":1,"message":"470","line":39,"column":9,"nodeType":"437","messageId":"438","endLine":39,"endColumn":16},{"ruleId":"471","severity":1,"message":"472","line":39,"column":57,"nodeType":"473","messageId":"474","endLine":39,"endColumn":59},{"ruleId":"435","severity":1,"message":"455","line":50,"column":7,"nodeType":"437","messageId":"438","endLine":50,"endColumn":14},{"ruleId":"435","severity":1,"message":"453","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":22},{"ruleId":"528","severity":1,"message":"529","line":38,"column":11,"nodeType":"530","endLine":38,"endColumn":73},{"ruleId":"435","severity":1,"message":"453","line":11,"column":10,"nodeType":"437","messageId":"438","endLine":11,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":11,"column":24,"nodeType":"437","messageId":"438","endLine":11,"endColumn":39},{"ruleId":"447","severity":1,"message":"482","line":33,"column":6,"nodeType":"449","endLine":33,"endColumn":13,"suggestions":"531"},{"ruleId":"435","severity":1,"message":"453","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":8,"column":24,"nodeType":"437","messageId":"438","endLine":8,"endColumn":39},{"ruleId":"528","severity":1,"message":"529","line":25,"column":13,"nodeType":"530","endLine":25,"endColumn":75},{"ruleId":"435","severity":1,"message":"453","line":10,"column":10,"nodeType":"437","messageId":"438","endLine":10,"endColumn":22},{"ruleId":"528","severity":1,"message":"529","line":41,"column":13,"nodeType":"530","endLine":41,"endColumn":75},{"ruleId":"435","severity":1,"message":"458","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":11},{"ruleId":"435","severity":1,"message":"453","line":10,"column":10,"nodeType":"437","messageId":"438","endLine":10,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":10,"column":24,"nodeType":"437","messageId":"438","endLine":10,"endColumn":39},{"ruleId":"447","severity":1,"message":"532","line":23,"column":6,"nodeType":"449","endLine":23,"endColumn":8,"suggestions":"533"},{"ruleId":"435","severity":1,"message":"470","line":26,"column":9,"nodeType":"437","messageId":"438","endLine":26,"endColumn":16},{"ruleId":"471","severity":1,"message":"472","line":26,"column":44,"nodeType":"473","messageId":"474","endLine":26,"endColumn":46},{"ruleId":"447","severity":1,"message":"534","line":118,"column":6,"nodeType":"449","endLine":118,"endColumn":8,"suggestions":"535"},{"ruleId":"435","severity":1,"message":"455","line":120,"column":9,"nodeType":"437","messageId":"438","endLine":120,"endColumn":16},{"ruleId":"435","severity":1,"message":"536","line":122,"column":9,"nodeType":"437","messageId":"438","endLine":122,"endColumn":26},{"ruleId":"435","severity":1,"message":"461","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":25},{"ruleId":"435","severity":1,"message":"537","line":2,"column":8,"nodeType":"437","messageId":"438","endLine":2,"endColumn":24},{"ruleId":"435","severity":1,"message":"454","line":15,"column":24,"nodeType":"437","messageId":"438","endLine":15,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":26,"column":6,"nodeType":"449","endLine":26,"endColumn":8,"suggestions":"538"},{"ruleId":"435","severity":1,"message":"539","line":28,"column":9,"nodeType":"437","messageId":"438","endLine":28,"endColumn":17},{"ruleId":"435","severity":1,"message":"453","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":6,"column":24,"nodeType":"437","messageId":"438","endLine":6,"endColumn":39},{"ruleId":"435","severity":1,"message":"511","line":10,"column":9,"nodeType":"437","messageId":"438","endLine":10,"endColumn":20},{"ruleId":"435","severity":1,"message":"453","line":121,"column":10,"nodeType":"437","messageId":"438","endLine":121,"endColumn":22},{"ruleId":"435","severity":1,"message":"454","line":121,"column":24,"nodeType":"437","messageId":"438","endLine":121,"endColumn":39},{"ruleId":"435","severity":1,"message":"452","line":5,"column":16,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"454","line":10,"column":24,"nodeType":"437","messageId":"438","endLine":10,"endColumn":39},{"ruleId":"435","severity":1,"message":"455","line":12,"column":7,"nodeType":"437","messageId":"438","endLine":12,"endColumn":14},{"ruleId":"435","severity":1,"message":"456","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":15},{"ruleId":"435","severity":1,"message":"464","line":15,"column":10,"nodeType":"437","messageId":"438","endLine":15,"endColumn":19},{"ruleId":"435","severity":1,"message":"465","line":15,"column":21,"nodeType":"437","messageId":"438","endLine":15,"endColumn":33},{"ruleId":"447","severity":1,"message":"540","line":46,"column":6,"nodeType":"449","endLine":46,"endColumn":8,"suggestions":"541"},{"ruleId":"435","severity":1,"message":"542","line":6,"column":11,"nodeType":"437","messageId":"438","endLine":6,"endColumn":13},{"ruleId":"435","severity":1,"message":"463","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":8,"column":24,"nodeType":"437","messageId":"438","endLine":8,"endColumn":39},{"ruleId":"435","severity":1,"message":"519","line":9,"column":10,"nodeType":"437","messageId":"438","endLine":9,"endColumn":20},{"ruleId":"435","severity":1,"message":"520","line":9,"column":22,"nodeType":"437","messageId":"438","endLine":9,"endColumn":35},{"ruleId":"435","severity":1,"message":"521","line":12,"column":10,"nodeType":"437","messageId":"438","endLine":12,"endColumn":25},{"ruleId":"435","severity":1,"message":"523","line":14,"column":9,"nodeType":"437","messageId":"438","endLine":14,"endColumn":27},{"ruleId":"471","severity":1,"message":"472","line":14,"column":59,"nodeType":"473","messageId":"474","endLine":14,"endColumn":61},{"ruleId":"435","severity":1,"message":"543","line":42,"column":12,"nodeType":"437","messageId":"438","endLine":42,"endColumn":31},{"ruleId":"447","severity":1,"message":"466","line":70,"column":6,"nodeType":"449","endLine":70,"endColumn":8,"suggestions":"544"},{"ruleId":"435","severity":1,"message":"454","line":8,"column":24,"nodeType":"437","messageId":"438","endLine":8,"endColumn":39},{"ruleId":"447","severity":1,"message":"466","line":47,"column":6,"nodeType":"449","endLine":47,"endColumn":8,"suggestions":"545"},{"ruleId":"435","severity":1,"message":"454","line":8,"column":24,"nodeType":"437","messageId":"438","endLine":8,"endColumn":39},"no-native-reassign",["546"],"no-negated-in-lhs",["547"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'HomePage' is defined but never used.","'emailLinkComplete' is defined but never used.","'ReportSection' is defined but never used.","'CreateNewAssessment' is defined but never used.","'ResultPage' is defined but never used.","'VarifyEmail' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedInUser.email'. Either include it or remove the dependency array.","ArrayExpression",["548"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'loggedInUser' is assigned a value but never used.","'setLoggedInUser' is assigned a value but never used.","'history' is assigned a value but never used.","'location' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'pdf' is defined but never used.","'useContext' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'SingleQuestion' is defined but never used.","'img' is defined but never used.","'allAnswer' is assigned a value but never used.","'setAllAnswer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'loggedInUser.email'. Either include them or remove the dependency array.",["549"],"React Hook useEffect has missing dependencies: 'history' and 'loggedInUser.email'. Either include them or remove the dependency array.",["550"],"'allKyes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Picture1' is defined but never used.","'AdminNavBar' is defined but never used.","'setFinalQuestion' is assigned a value but never used.","'NavBarSection' is defined but never used.","'errorMessage' is assigned a value but never used.","'uniqueEmail' is assigned a value but never used.","'setUniqueEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["551"],"React Hook useEffect has missing dependencies: 'history', 'loggedInUser.email', and 'setLoggedInUser'. Either include them or remove the dependency array.",["552"],"'from' is assigned a value but never used.","'ClientNavSection' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setStatPoint' is assigned a value but never used.","'setEndPoint' is assigned a value but never used.","'handleBothCount' is assigned a value but never used.",["553"],"'PDFDownloader' is defined but never used.","React Hook useEffect has missing dependencies: 'handleLogOut' and 'history'. Either include them or remove the dependency array.",["554"],"'reload' is assigned a value but never used.","'handleSignUp' is assigned a value but never used.",["555"],"'picture' is defined but never used.","'StopWatch' is defined but never used.","'giverAnswer' is assigned a value but never used.","'setGivenAnswer' is assigned a value but never used.","'questionHeader' is assigned a value but never used.","'details' is assigned a value but never used.",["556"],"'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","React Hook useEffect contains a call to 'setSelectionButton'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [refereshed, selectionButton] as a second argument to the useEffect Hook.",["557"],"'handleClick' is assigned a value but never used.","'style5' is assigned a value but never used.","'style4' is assigned a value but never used.","'style3' is assigned a value but never used.","'style2' is assigned a value but never used.","'style1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email' and 'header'. Either include them or remove the dependency array.",["558"],"'totalScore' is assigned a value but never used.","'setTotalScore' is assigned a value but never used.","'PercentageScore' is assigned a value but never used.","'setPercentageScore' is assigned a value but never used.","'makeMapToFindScore' is assigned a value but never used.",["559"],"'assessmentsAll' is defined but never used.","React Hook useEffect has missing dependencies: 'loggedInUser.email' and 'setLoggedInUser'. Either include them or remove the dependency array.",["560"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["561"],"React Hook useEffect has a missing dependency: 'uniqueEmail.email'. Either include it or remove the dependency array.",["562"],"React Hook useEffect has a missing dependency: 'answer.email'. Either include it or remove the dependency array.",["563"],"'handleUserDetails' is assigned a value but never used.","'IntroductionPage' is defined but never used.",["564"],"'urllocal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'assessment' and 'loggedInUser.email'. Either include them or remove the dependency array.",["565"],"'id' is assigned a value but never used.","'findOutPrecentScore' is defined but never used.",["566"],["567"],"no-global-assign","no-unsafe-negation",{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"570","fix":"578"},{"desc":"579","fix":"580"},{"desc":"576","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"586","fix":"588"},{"desc":"589","fix":"590"},{"desc":"582","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"568","fix":"596"},{"desc":"597","fix":"598"},{"desc":"570","fix":"599"},{"desc":"570","fix":"600"},"Update the dependencies array to be: [loggedInUser.email]",{"range":"601","text":"602"},"Update the dependencies array to be: [id, loggedInUser.email]",{"range":"603","text":"604"},"Update the dependencies array to be: [history, loggedInUser.email]",{"range":"605","text":"606"},"Update the dependencies array to be: [id]",{"range":"607","text":"608"},"Update the dependencies array to be: [history, loggedInUser.email, setLoggedInUser]",{"range":"609","text":"610"},{"range":"611","text":"604"},"Update the dependencies array to be: [handleLogOut, history, locationKeys]",{"range":"612","text":"613"},{"range":"614","text":"610"},"Update the dependencies array to be: [count, id]",{"range":"615","text":"616"},"Add dependencies array: [refereshed, selectionButton]",{"range":"617","text":"618"},"Update the dependencies array to be: [email, header]",{"range":"619","text":"620"},{"range":"621","text":"620"},"Update the dependencies array to be: [loggedInUser.email, setLoggedInUser]",{"range":"622","text":"623"},{"range":"624","text":"616"},"Update the dependencies array to be: [uniqueEmail.email]",{"range":"625","text":"626"},"Update the dependencies array to be: [answer.email]",{"range":"627","text":"628"},{"range":"629","text":"602"},"Update the dependencies array to be: [assessment, loggedInUser.email]",{"range":"630","text":"631"},{"range":"632","text":"604"},{"range":"633","text":"604"},[2269,2271],"[loggedInUser.email]",[1191,1193],"[id, loggedInUser.email]",[1087,1089],"[history, loggedInUser.email]",[902,904],"[id]",[810,812],"[history, loggedInUser.email, setLoggedInUser]",[1145,1147],[1125,1139],"[handleLogOut, history, locationKeys]",[963,965],[3940,3947],"[count, id]",[6132,6132],", [refereshed, selectionButton]",[1054,1056],"[email, header]",[1979,1981],[932,934],"[loggedInUser.email, setLoggedInUser]",[1213,1220],[791,793],"[uniqueEmail.email]",[3147,3149],"[answer.email]",[1084,1086],[1393,1395],"[assessment, loggedInUser.email]",[2514,2516],[1477,1479]]